<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [..\..\Output\atk_mp1_m4.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image ..\..\Output\atk_mp1_m4.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Sat Feb 20 20:27:06 2021
<BR><P>
<H3>Maximum Stack Usage =        788 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_entry_main &rArr; main &rArr; usart_init &rArr; HAL_UART_Init &rArr; HAL_UART_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; HAL_RCC_OscConfig &rArr; HAL_RCC_GetMCUFreq &rArr; HAL_RCC_GetMCUSSFreq &rArr; HAL_RCC_GetPLL3ClockFreq
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[15]">WWDG1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[15]">WWDG1_IRQHandler</a><BR>
 <LI><a href="#[16]">PVD_AVD_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[16]">PVD_AVD_IRQHandler</a><BR>
 <LI><a href="#[17]">TAMP_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[17]">TAMP_IRQHandler</a><BR>
 <LI><a href="#[18]">RTC_WKUP_ALARM_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[18]">RTC_WKUP_ALARM_IRQHandler</a><BR>
 <LI><a href="#[19]">RESERVED4_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[19]">RESERVED4_IRQHandler</a><BR>
 <LI><a href="#[1a]">RCC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1a]">RCC_IRQHandler</a><BR>
 <LI><a href="#[1b]">EXTI0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1b]">EXTI0_IRQHandler</a><BR>
 <LI><a href="#[1c]">EXTI1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1c]">EXTI1_IRQHandler</a><BR>
 <LI><a href="#[1d]">EXTI2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1d]">EXTI2_IRQHandler</a><BR>
 <LI><a href="#[1e]">EXTI3_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1e]">EXTI3_IRQHandler</a><BR>
 <LI><a href="#[1f]">EXTI4_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1f]">EXTI4_IRQHandler</a><BR>
 <LI><a href="#[20]">DMA1_Stream0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[20]">DMA1_Stream0_IRQHandler</a><BR>
 <LI><a href="#[21]">DMA1_Stream1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[21]">DMA1_Stream1_IRQHandler</a><BR>
 <LI><a href="#[22]">DMA1_Stream2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[22]">DMA1_Stream2_IRQHandler</a><BR>
 <LI><a href="#[23]">DMA1_Stream3_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[23]">DMA1_Stream3_IRQHandler</a><BR>
 <LI><a href="#[24]">DMA1_Stream4_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[24]">DMA1_Stream4_IRQHandler</a><BR>
 <LI><a href="#[25]">DMA1_Stream5_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[25]">DMA1_Stream5_IRQHandler</a><BR>
 <LI><a href="#[26]">DMA1_Stream6_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[26]">DMA1_Stream6_IRQHandler</a><BR>
 <LI><a href="#[27]">ADC1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[27]">ADC1_IRQHandler</a><BR>
 <LI><a href="#[28]">FDCAN1_IT0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[28]">FDCAN1_IT0_IRQHandler</a><BR>
 <LI><a href="#[29]">FDCAN2_IT0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[29]">FDCAN2_IT0_IRQHandler</a><BR>
 <LI><a href="#[2a]">FDCAN1_IT1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2a]">FDCAN1_IT1_IRQHandler</a><BR>
 <LI><a href="#[2b]">FDCAN2_IT1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2b]">FDCAN2_IT1_IRQHandler</a><BR>
 <LI><a href="#[2c]">EXTI5_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2c]">EXTI5_IRQHandler</a><BR>
 <LI><a href="#[2d]">TIM1_BRK_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2d]">TIM1_BRK_IRQHandler</a><BR>
 <LI><a href="#[2e]">TIM1_UP_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2e]">TIM1_UP_IRQHandler</a><BR>
 <LI><a href="#[2f]">TIM1_TRG_COM_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2f]">TIM1_TRG_COM_IRQHandler</a><BR>
 <LI><a href="#[30]">TIM1_CC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[30]">TIM1_CC_IRQHandler</a><BR>
 <LI><a href="#[31]">TIM2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[31]">TIM2_IRQHandler</a><BR>
 <LI><a href="#[32]">TIM3_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[32]">TIM3_IRQHandler</a><BR>
 <LI><a href="#[34]">I2C1_EV_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[34]">I2C1_EV_IRQHandler</a><BR>
 <LI><a href="#[35]">I2C1_ER_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[35]">I2C1_ER_IRQHandler</a><BR>
 <LI><a href="#[36]">I2C2_EV_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[36]">I2C2_EV_IRQHandler</a><BR>
 <LI><a href="#[37]">I2C2_ER_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[37]">I2C2_ER_IRQHandler</a><BR>
 <LI><a href="#[38]">SPI1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[38]">SPI1_IRQHandler</a><BR>
 <LI><a href="#[39]">SPI2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[39]">SPI2_IRQHandler</a><BR>
 <LI><a href="#[3a]">USART1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3a]">USART1_IRQHandler</a><BR>
 <LI><a href="#[3b]">USART2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3b]">USART2_IRQHandler</a><BR>
 <LI><a href="#[3c]">USART3_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3c]">USART3_IRQHandler</a><BR>
 <LI><a href="#[3d]">EXTI10_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3d]">EXTI10_IRQHandler</a><BR>
 <LI><a href="#[3e]">RTC_TIMESTAMP_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3e]">RTC_TIMESTAMP_IRQHandler</a><BR>
 <LI><a href="#[3f]">EXTI11_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3f]">EXTI11_IRQHandler</a><BR>
 <LI><a href="#[40]">TIM8_BRK_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[40]">TIM8_BRK_IRQHandler</a><BR>
 <LI><a href="#[41]">TIM8_UP_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[41]">TIM8_UP_IRQHandler</a><BR>
 <LI><a href="#[42]">TIM8_TRG_COM_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[42]">TIM8_TRG_COM_IRQHandler</a><BR>
 <LI><a href="#[43]">TIM8_CC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[43]">TIM8_CC_IRQHandler</a><BR>
 <LI><a href="#[45]">FMC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[45]">FMC_IRQHandler</a><BR>
 <LI><a href="#[46]">SDMMC1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[46]">SDMMC1_IRQHandler</a><BR>
 <LI><a href="#[47]">TIM5_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[47]">TIM5_IRQHandler</a><BR>
 <LI><a href="#[48]">SPI3_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[48]">SPI3_IRQHandler</a><BR>
 <LI><a href="#[4a]">UART5_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4a]">UART5_IRQHandler</a><BR>
 <LI><a href="#[4b]">TIM6_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4b]">TIM6_IRQHandler</a><BR>
 <LI><a href="#[4c]">TIM7_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4c]">TIM7_IRQHandler</a><BR>
 <LI><a href="#[4d]">DMA2_Stream0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4d]">DMA2_Stream0_IRQHandler</a><BR>
 <LI><a href="#[4e]">DMA2_Stream1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4e]">DMA2_Stream1_IRQHandler</a><BR>
 <LI><a href="#[4f]">DMA2_Stream2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4f]">DMA2_Stream2_IRQHandler</a><BR>
 <LI><a href="#[50]">DMA2_Stream3_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[50]">DMA2_Stream3_IRQHandler</a><BR>
 <LI><a href="#[51]">DMA2_Stream4_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[51]">DMA2_Stream4_IRQHandler</a><BR>
 <LI><a href="#[52]">ETH1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[52]">ETH1_IRQHandler</a><BR>
 <LI><a href="#[53]">ETH1_WKUP_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[53]">ETH1_WKUP_IRQHandler</a><BR>
 <LI><a href="#[54]">FDCAN_CAL_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[54]">FDCAN_CAL_IRQHandler</a><BR>
 <LI><a href="#[55]">EXTI6_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[55]">EXTI6_IRQHandler</a><BR>
 <LI><a href="#[56]">EXTI7_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[56]">EXTI7_IRQHandler</a><BR>
 <LI><a href="#[57]">EXTI8_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[57]">EXTI8_IRQHandler</a><BR>
 <LI><a href="#[58]">EXTI9_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[58]">EXTI9_IRQHandler</a><BR>
 <LI><a href="#[59]">DMA2_Stream5_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[59]">DMA2_Stream5_IRQHandler</a><BR>
 <LI><a href="#[5a]">DMA2_Stream6_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5a]">DMA2_Stream6_IRQHandler</a><BR>
 <LI><a href="#[5b]">DMA2_Stream7_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5b]">DMA2_Stream7_IRQHandler</a><BR>
 <LI><a href="#[5c]">USART6_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5c]">USART6_IRQHandler</a><BR>
 <LI><a href="#[5d]">I2C3_EV_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5d]">I2C3_EV_IRQHandler</a><BR>
 <LI><a href="#[5e]">I2C3_ER_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5e]">I2C3_ER_IRQHandler</a><BR>
 <LI><a href="#[5f]">USBH_OHCI_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5f]">USBH_OHCI_IRQHandler</a><BR>
 <LI><a href="#[60]">USBH_EHCI_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[60]">USBH_EHCI_IRQHandler</a><BR>
 <LI><a href="#[61]">EXTI12_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[61]">EXTI12_IRQHandler</a><BR>
 <LI><a href="#[62]">EXTI13_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[62]">EXTI13_IRQHandler</a><BR>
 <LI><a href="#[63]">DCMI_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[63]">DCMI_IRQHandler</a><BR>
 <LI><a href="#[64]">CRYP1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[64]">CRYP1_IRQHandler</a><BR>
 <LI><a href="#[65]">HASH1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[65]">HASH1_IRQHandler</a><BR>
 <LI><a href="#[66]">FPU_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[66]">FPU_IRQHandler</a><BR>
 <LI><a href="#[67]">UART7_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[67]">UART7_IRQHandler</a><BR>
 <LI><a href="#[68]">UART8_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[68]">UART8_IRQHandler</a><BR>
 <LI><a href="#[69]">SPI4_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[69]">SPI4_IRQHandler</a><BR>
 <LI><a href="#[6a]">SPI5_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6a]">SPI5_IRQHandler</a><BR>
 <LI><a href="#[6b]">SPI6_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6b]">SPI6_IRQHandler</a><BR>
 <LI><a href="#[6c]">SAI1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6c]">SAI1_IRQHandler</a><BR>
 <LI><a href="#[6d]">LTDC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6d]">LTDC_IRQHandler</a><BR>
 <LI><a href="#[6e]">LTDC_ER_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6e]">LTDC_ER_IRQHandler</a><BR>
 <LI><a href="#[6f]">ADC2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6f]">ADC2_IRQHandler</a><BR>
 <LI><a href="#[70]">SAI2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[70]">SAI2_IRQHandler</a><BR>
 <LI><a href="#[71]">QUADSPI_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[71]">QUADSPI_IRQHandler</a><BR>
 <LI><a href="#[72]">LPTIM1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[72]">LPTIM1_IRQHandler</a><BR>
 <LI><a href="#[73]">CEC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[73]">CEC_IRQHandler</a><BR>
 <LI><a href="#[74]">I2C4_EV_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[74]">I2C4_EV_IRQHandler</a><BR>
 <LI><a href="#[75]">I2C4_ER_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[75]">I2C4_ER_IRQHandler</a><BR>
 <LI><a href="#[76]">SPDIF_RX_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[76]">SPDIF_RX_IRQHandler</a><BR>
 <LI><a href="#[77]">OTG_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[77]">OTG_IRQHandler</a><BR>
 <LI><a href="#[78]">RESERVED99_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[78]">RESERVED99_IRQHandler</a><BR>
 <LI><a href="#[79]">IPCC_RX0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[79]">IPCC_RX0_IRQHandler</a><BR>
 <LI><a href="#[7a]">IPCC_TX0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7a]">IPCC_TX0_IRQHandler</a><BR>
 <LI><a href="#[7b]">DMAMUX1_OVR_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7b]">DMAMUX1_OVR_IRQHandler</a><BR>
 <LI><a href="#[7c]">IPCC_RX1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7c]">IPCC_RX1_IRQHandler</a><BR>
 <LI><a href="#[7d]">IPCC_TX1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7d]">IPCC_TX1_IRQHandler</a><BR>
 <LI><a href="#[7e]">CRYP2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7e]">CRYP2_IRQHandler</a><BR>
 <LI><a href="#[7f]">HASH2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7f]">HASH2_IRQHandler</a><BR>
 <LI><a href="#[80]">I2C5_EV_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[80]">I2C5_EV_IRQHandler</a><BR>
 <LI><a href="#[81]">I2C5_ER_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[81]">I2C5_ER_IRQHandler</a><BR>
 <LI><a href="#[82]">GPU_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[82]">GPU_IRQHandler</a><BR>
 <LI><a href="#[83]">DFSDM1_FLT0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[83]">DFSDM1_FLT0_IRQHandler</a><BR>
 <LI><a href="#[84]">DFSDM1_FLT1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[84]">DFSDM1_FLT1_IRQHandler</a><BR>
 <LI><a href="#[85]">DFSDM1_FLT2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[85]">DFSDM1_FLT2_IRQHandler</a><BR>
 <LI><a href="#[86]">DFSDM1_FLT3_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[86]">DFSDM1_FLT3_IRQHandler</a><BR>
 <LI><a href="#[87]">SAI3_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[87]">SAI3_IRQHandler</a><BR>
 <LI><a href="#[88]">DFSDM1_FLT4_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[88]">DFSDM1_FLT4_IRQHandler</a><BR>
 <LI><a href="#[89]">TIM15_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[89]">TIM15_IRQHandler</a><BR>
 <LI><a href="#[8a]">TIM16_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8a]">TIM16_IRQHandler</a><BR>
 <LI><a href="#[8b]">TIM17_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8b]">TIM17_IRQHandler</a><BR>
 <LI><a href="#[8c]">TIM12_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8c]">TIM12_IRQHandler</a><BR>
 <LI><a href="#[8d]">MDIOS_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8d]">MDIOS_IRQHandler</a><BR>
 <LI><a href="#[8e]">EXTI14_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8e]">EXTI14_IRQHandler</a><BR>
 <LI><a href="#[8f]">MDMA_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8f]">MDMA_IRQHandler</a><BR>
 <LI><a href="#[90]">DSI_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[90]">DSI_IRQHandler</a><BR>
 <LI><a href="#[91]">SDMMC2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[91]">SDMMC2_IRQHandler</a><BR>
 <LI><a href="#[92]">HSEM_IT2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[92]">HSEM_IT2_IRQHandler</a><BR>
 <LI><a href="#[93]">DFSDM1_FLT5_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[93]">DFSDM1_FLT5_IRQHandler</a><BR>
 <LI><a href="#[94]">EXTI15_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[94]">EXTI15_IRQHandler</a><BR>
 <LI><a href="#[95]">nCTIIRQ1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[95]">nCTIIRQ1_IRQHandler</a><BR>
 <LI><a href="#[96]">nCTIIRQ2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[96]">nCTIIRQ2_IRQHandler</a><BR>
 <LI><a href="#[97]">TIM13_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[97]">TIM13_IRQHandler</a><BR>
 <LI><a href="#[98]">TIM14_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[98]">TIM14_IRQHandler</a><BR>
 <LI><a href="#[99]">DAC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[99]">DAC_IRQHandler</a><BR>
 <LI><a href="#[9a]">RNG1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9a]">RNG1_IRQHandler</a><BR>
 <LI><a href="#[9b]">RNG2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9b]">RNG2_IRQHandler</a><BR>
 <LI><a href="#[9c]">I2C6_EV_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9c]">I2C6_EV_IRQHandler</a><BR>
 <LI><a href="#[9d]">I2C6_ER_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9d]">I2C6_ER_IRQHandler</a><BR>
 <LI><a href="#[9e]">SDMMC3_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9e]">SDMMC3_IRQHandler</a><BR>
 <LI><a href="#[9f]">LPTIM2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9f]">LPTIM2_IRQHandler</a><BR>
 <LI><a href="#[a0]">LPTIM3_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a0]">LPTIM3_IRQHandler</a><BR>
 <LI><a href="#[a1]">LPTIM4_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a1]">LPTIM4_IRQHandler</a><BR>
 <LI><a href="#[a2]">LPTIM5_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a2]">LPTIM5_IRQHandler</a><BR>
 <LI><a href="#[a3]">ETH1_LPI_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a3]">ETH1_LPI_IRQHandler</a><BR>
 <LI><a href="#[a4]">RESERVED143_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a4]">RESERVED143_IRQHandler</a><BR>
 <LI><a href="#[a5]">MPU_SEV_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a5]">MPU_SEV_IRQHandler</a><BR>
 <LI><a href="#[a6]">RCC_WAKEUP_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a6]">RCC_WAKEUP_IRQHandler</a><BR>
 <LI><a href="#[a7]">SAI4_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a7]">SAI4_IRQHandler</a><BR>
 <LI><a href="#[a8]">DTS_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a8]">DTS_IRQHandler</a><BR>
 <LI><a href="#[a9]">RESERVED148_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a9]">RESERVED148_IRQHandler</a><BR>
 <LI><a href="#[aa]">WAKEUP_PIN_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[aa]">WAKEUP_PIN_IRQHandler</a><BR>
 <LI><a href="#[f]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[f]">BusFault_Handler</a><BR>
 <LI><a href="#[d]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[d]">HardFault_Handler</a><BR>
 <LI><a href="#[e]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[e]">MemManage_Handler</a><BR>
 <LI><a href="#[10]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[10]">UsageFault_Handler</a><BR>
 <LI><a href="#[15a]">usmart_strcmp</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[15a]">usmart_strcmp</a><BR>
 <LI><a href="#[163]">usmart_strcopy</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[163]">usmart_strcopy</a><BR>
 <LI><a href="#[15f]">usmart_search_nextc</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[15f]">usmart_search_nextc</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[27]">ADC1_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[6f]">ADC2_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[f]">BusFault_Handler</a> from stm32mp1xx_it.o(i.BusFault_Handler) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[73]">CEC_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[64]">CRYP1_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[7e]">CRYP2_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[99]">DAC_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[63]">DCMI_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[83]">DFSDM1_FLT0_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[84]">DFSDM1_FLT1_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[85]">DFSDM1_FLT2_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[86]">DFSDM1_FLT3_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[88]">DFSDM1_FLT4_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[93]">DFSDM1_FLT5_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[20]">DMA1_Stream0_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[21]">DMA1_Stream1_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[22]">DMA1_Stream2_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[23]">DMA1_Stream3_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[24]">DMA1_Stream4_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[25]">DMA1_Stream5_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[26]">DMA1_Stream6_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[44]">DMA1_Stream7_IRQHandler</a> from adc.o(i.DMA1_Stream7_IRQHandler) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[4d]">DMA2_Stream0_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[4e]">DMA2_Stream1_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[4f]">DMA2_Stream2_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[50]">DMA2_Stream3_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[51]">DMA2_Stream4_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[59]">DMA2_Stream5_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[5a]">DMA2_Stream6_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[5b]">DMA2_Stream7_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[7b]">DMAMUX1_OVR_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[90]">DSI_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[a8]">DTS_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[12]">DebugMon_Handler</a> from stm32mp1xx_it.o(i.DebugMon_Handler) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[52]">ETH1_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[a3]">ETH1_LPI_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[53]">ETH1_WKUP_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[1b]">EXTI0_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[3d]">EXTI10_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[3f]">EXTI11_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[61]">EXTI12_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[62]">EXTI13_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[8e]">EXTI14_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[94]">EXTI15_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[1c]">EXTI1_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[1d]">EXTI2_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[1e]">EXTI3_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[1f]">EXTI4_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[2c]">EXTI5_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[55]">EXTI6_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[56]">EXTI7_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[57]">EXTI8_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[58]">EXTI9_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[28]">FDCAN1_IT0_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[2a]">FDCAN1_IT1_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[29]">FDCAN2_IT0_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[2b]">FDCAN2_IT1_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[54]">FDCAN_CAL_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[45]">FMC_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[66]">FPU_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[82]">GPU_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[65]">HASH1_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[7f]">HASH2_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[92]">HSEM_IT2_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[d]">HardFault_Handler</a> from stm32mp1xx_it.o(i.HardFault_Handler) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[35]">I2C1_ER_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[34]">I2C1_EV_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[37]">I2C2_ER_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[36]">I2C2_EV_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[5e]">I2C3_ER_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[5d]">I2C3_EV_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[75]">I2C4_ER_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[74]">I2C4_EV_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[81]">I2C5_ER_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[80]">I2C5_EV_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[9d]">I2C6_ER_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[9c]">I2C6_EV_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[79]">IPCC_RX0_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[7c]">IPCC_RX1_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[7a]">IPCC_TX0_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[7d]">IPCC_TX1_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[72]">LPTIM1_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[9f]">LPTIM2_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[a0]">LPTIM3_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[a1]">LPTIM4_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[a2]">LPTIM5_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[6e]">LTDC_ER_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[6d]">LTDC_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[8d]">MDIOS_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[8f]">MDMA_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[a5]">MPU_SEV_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[e]">MemManage_Handler</a> from stm32mp1xx_it.o(i.MemManage_Handler) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[c]">NMI_Handler</a> from stm32mp1xx_it.o(i.NMI_Handler) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[77]">OTG_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[16]">PVD_AVD_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[13]">PendSV_Handler</a> from stm32mp1xx_it.o(i.PendSV_Handler) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[71]">QUADSPI_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[1a]">RCC_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[a6]">RCC_WAKEUP_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[a4]">RESERVED143_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[a9]">RESERVED148_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[19]">RESERVED4_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[78]">RESERVED99_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[9a]">RNG1_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[9b]">RNG2_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[3e]">RTC_TIMESTAMP_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[18]">RTC_WKUP_ALARM_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[b]">Reset_Handler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[6c]">SAI1_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[70]">SAI2_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[87]">SAI3_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[a7]">SAI4_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[46]">SDMMC1_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[91]">SDMMC2_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[9e]">SDMMC3_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[76]">SPDIF_RX_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[38]">SPI1_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[39]">SPI2_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[48]">SPI3_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[69]">SPI4_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[6a]">SPI5_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[6b]">SPI6_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[11]">SVC_Handler</a> from stm32mp1xx_it.o(i.SVC_Handler) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[14]">SysTick_Handler</a> from stm32mp1xx_it.o(i.SysTick_Handler) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[ab]">SystemInit</a> from system_stm32mp1xx.o(i.SystemInit) referenced from startup_stm32mp15xx.o(.text)
 <LI><a href="#[17]">TAMP_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[8c]">TIM12_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[97]">TIM13_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[98]">TIM14_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[89]">TIM15_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[8a]">TIM16_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[8b]">TIM17_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[2d]">TIM1_BRK_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[30]">TIM1_CC_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[2f]">TIM1_TRG_COM_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[2e]">TIM1_UP_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[31]">TIM2_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[32]">TIM3_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[33]">TIM4_IRQHandler</a> from usmart_port.o(i.TIM4_IRQHandler) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[47]">TIM5_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[4b]">TIM6_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[4c]">TIM7_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[40]">TIM8_BRK_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[43]">TIM8_CC_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[42]">TIM8_TRG_COM_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[41]">TIM8_UP_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[49]">UART4_IRQHandler</a> from usart.o(i.UART4_IRQHandler) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[4a]">UART5_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[67]">UART7_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[68]">UART8_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[af]">UART_DMAAbortOnError</a> from stm32mp1xx_hal_uart.o(i.UART_DMAAbortOnError) referenced from stm32mp1xx_hal_uart.o(i.HAL_UART_IRQHandler)
 <LI><a href="#[b0]">UART_MDMAAbortOnError</a> from stm32mp1xx_hal_uart.o(i.UART_MDMAAbortOnError) referenced from stm32mp1xx_hal_uart.o(i.HAL_UART_IRQHandler)
 <LI><a href="#[b4]">UART_RxISR_16BIT</a> from stm32mp1xx_hal_uart.o(i.UART_RxISR_16BIT) referenced from stm32mp1xx_hal_uart.o(i.HAL_UART_Receive_IT)
 <LI><a href="#[b4]">UART_RxISR_16BIT</a> from stm32mp1xx_hal_uart.o(i.UART_RxISR_16BIT) referenced from stm32mp1xx_hal_uart.o(i.UART_RxISR_16BIT_FIFOEN)
 <LI><a href="#[b2]">UART_RxISR_16BIT_FIFOEN</a> from stm32mp1xx_hal_uart.o(i.UART_RxISR_16BIT_FIFOEN) referenced from stm32mp1xx_hal_uart.o(i.HAL_UART_Receive_IT)
 <LI><a href="#[b3]">UART_RxISR_8BIT</a> from stm32mp1xx_hal_uart.o(i.UART_RxISR_8BIT) referenced from stm32mp1xx_hal_uart.o(i.HAL_UART_Receive_IT)
 <LI><a href="#[b3]">UART_RxISR_8BIT</a> from stm32mp1xx_hal_uart.o(i.UART_RxISR_8BIT) referenced from stm32mp1xx_hal_uart.o(i.UART_RxISR_8BIT_FIFOEN)
 <LI><a href="#[b1]">UART_RxISR_8BIT_FIFOEN</a> from stm32mp1xx_hal_uart.o(i.UART_RxISR_8BIT_FIFOEN) referenced from stm32mp1xx_hal_uart.o(i.HAL_UART_Receive_IT)
 <LI><a href="#[3a]">USART1_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[3b]">USART2_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[3c]">USART3_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[5c]">USART6_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[60]">USBH_EHCI_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[5f]">USBH_OHCI_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[10]">UsageFault_Handler</a> from stm32mp1xx_it.o(i.UsageFault_Handler) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[aa]">WAKEUP_PIN_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[15]">WWDG1_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[b5]">__main</a> from __main.o(!!!main) referenced from startup_stm32mp15xx.o(.text)
 <LI><a href="#[ae]">_printf_input_char</a> from _printf_char_common.o(.text) referenced from _printf_char_common.o(.text)
 <LI><a href="#[5]">delay_ms</a> from delay.o(i.delay_ms) referenced 2 times from usmart_config.o(.data)
 <LI><a href="#[6]">delay_us</a> from delay.o(i.delay_us) referenced 2 times from usmart_config.o(.data)
 <LI><a href="#[ad]">fputc</a> from usart.o(i.fputc) referenced from _printf_char_file.o(.text)
 <LI><a href="#[95]">nCTIIRQ1_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[96]">nCTIIRQ2_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[3]">read_addr</a> from usmart.o(i.read_addr) referenced 2 times from usmart_config.o(.data)
 <LI><a href="#[8]">usmart_cmd_rec</a> from usmart.o(i.usmart_cmd_rec) referenced 2 times from usmart_config.o(.data)
 <LI><a href="#[9]">usmart_exe</a> from usmart.o(i.usmart_exe) referenced 2 times from usmart_config.o(.data)
 <LI><a href="#[7]">usmart_init</a> from usmart.o(i.usmart_init) referenced 2 times from usmart_config.o(.data)
 <LI><a href="#[a]">usmart_scan</a> from usmart.o(i.usmart_scan) referenced 2 times from usmart_config.o(.data)
 <LI><a href="#[4]">write_addr</a> from usmart.o(i.write_addr) referenced 2 times from usmart_config.o(.data)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[b5]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[b6]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[b8]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[170]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[171]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[172]"></a>__decompress</STRONG> (Thumb, 90 bytes, Stack size unknown bytes, __dczerorl2.o(!!dczerorl2), UNUSED)

<P><STRONG><a name="[173]"></a>__decompress1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(!!dczerorl2), UNUSED)

<P><STRONG><a name="[174]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[b9]"></a>_printf_f</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_f.o(.ARM.Collect$$_printf_percent$$00000003))
<BR><BR>[Stack]<UL><LI>Max Depth = 324 + Unknown Stack Size
<LI>Call Chain = _printf_f &rArr; _printf_fp_dec &rArr; _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec
</UL>

<P><STRONG><a name="[db]"></a>_printf_percent</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[bb]"></a>_printf_d</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_d.o(.ARM.Collect$$_printf_percent$$00000009))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_d &rArr; _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[bd]"></a>_printf_u</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_u &rArr; _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[be]"></a>_printf_x</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_x.o(.ARM.Collect$$_printf_percent$$0000000C))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = _printf_x &rArr; _printf_int_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
</UL>

<P><STRONG><a name="[c0]"></a>_printf_c</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_c.o(.ARM.Collect$$_printf_percent$$00000013))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = _printf_c &rArr; _printf_char &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char
</UL>

<P><STRONG><a name="[c2]"></a>_printf_s</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_s.o(.ARM.Collect$$_printf_percent$$00000014))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = _printf_s &rArr; _printf_string &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_string
</UL>

<P><STRONG><a name="[175]"></a>_printf_percent_end</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017))

<P><STRONG><a name="[cb]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[c4]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000001))
<BR><BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_init
</UL>

<P><STRONG><a name="[176]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[c6]"></a>__rt_lib_init_lc_common</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000F))
<BR><BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
</UL>

<P><STRONG><a name="[177]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[178]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[179]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[17a]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[17b]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[17c]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[c8]"></a>__rt_lib_init_lc_numeric_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000016))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_lc_numeric_2 &rArr; _get_lc_numeric
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_numeric
</UL>

<P><STRONG><a name="[17d]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[17e]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[17f]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[180]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[181]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[182]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[183]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[184]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[185]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[186]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[187]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[188]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[189]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[d0]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[18a]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[18b]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000007))

<P><STRONG><a name="[18c]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[18d]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000010))

<P><STRONG><a name="[18e]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A))

<P><STRONG><a name="[18f]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[190]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[b7]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[191]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[192]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry5.o(.ARM.Collect$$rtentry$$00000005))

<P><STRONG><a name="[ca]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[193]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[cc]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 788 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; usart_init &rArr; HAL_UART_Init &rArr; HAL_UART_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; HAL_RCC_OscConfig &rArr; HAL_RCC_GetMCUFreq &rArr; HAL_RCC_GetMCUSSFreq &rArr; HAL_RCC_GetPLL3ClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[194]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[e8]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[cf]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[195]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[d1]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[b]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>WWDG1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WWDG1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WWDG1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>PVD_AVD_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PVD_AVD_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PVD_AVD_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>TAMP_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TAMP_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TAMP_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>RTC_WKUP_ALARM_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WKUP_ALARM_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WKUP_ALARM_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>RESERVED4_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RESERVED4_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RESERVED4_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>RCC_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI3_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI3_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>DMA1_Stream0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>DMA1_Stream1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>DMA1_Stream2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>DMA1_Stream3_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream3_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream3_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>DMA1_Stream4_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream4_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream4_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>DMA1_Stream5_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream5_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream5_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>DMA1_Stream6_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream6_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream6_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>ADC1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>FDCAN1_IT0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FDCAN1_IT0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FDCAN1_IT0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>FDCAN2_IT0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FDCAN2_IT0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FDCAN2_IT0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>FDCAN1_IT1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FDCAN1_IT1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FDCAN1_IT1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>FDCAN2_IT1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FDCAN2_IT1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FDCAN2_IT1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>EXTI5_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI5_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI5_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>TIM1_BRK_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_BRK_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_BRK_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>TIM1_UP_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_UP_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_UP_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>TIM1_TRG_COM_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_TRG_COM_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_TRG_COM_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_CC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_CC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>TIM2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>TIM3_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C1_EV_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C1_EV_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C1_ER_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C1_ER_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C2_EV_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C2_EV_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C2_ER_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C2_ER_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>SPI1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>SPI2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>USART1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>USART2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>USART3_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>EXTI10_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI10_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI10_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>RTC_TIMESTAMP_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_TIMESTAMP_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_TIMESTAMP_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>EXTI11_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI11_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI11_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>TIM8_BRK_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM8_BRK_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM8_BRK_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>TIM8_UP_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM8_UP_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM8_UP_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>TIM8_TRG_COM_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM8_TRG_COM_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM8_TRG_COM_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM8_CC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM8_CC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>FMC_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>SDMMC1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>TIM5_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM5_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM5_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>SPI3_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI3_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI3_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>UART5_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART5_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART5_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>TIM6_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>TIM7_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM7_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM7_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>DMA2_Stream0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Stream0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Stream0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>DMA2_Stream1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Stream1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Stream1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>DMA2_Stream2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Stream2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Stream2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>DMA2_Stream3_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Stream3_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Stream3_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>DMA2_Stream4_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Stream4_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Stream4_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>ETH1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>ETH1_WKUP_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH1_WKUP_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH1_WKUP_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>FDCAN_CAL_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FDCAN_CAL_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FDCAN_CAL_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>EXTI6_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI6_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI6_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>EXTI7_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI7_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI7_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>EXTI8_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI8_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI8_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>EXTI9_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI9_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI9_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>DMA2_Stream5_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Stream5_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Stream5_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>DMA2_Stream6_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Stream6_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Stream6_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>DMA2_Stream7_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Stream7_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Stream7_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>USART6_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART6_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART6_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>I2C3_EV_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C3_EV_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C3_EV_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>I2C3_ER_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C3_ER_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C3_ER_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[5f]"></a>USBH_OHCI_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>USBH_EHCI_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_EHCI_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_EHCI_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[61]"></a>EXTI12_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI12_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI12_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[62]"></a>EXTI13_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI13_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI13_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[63]"></a>DCMI_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCMI_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCMI_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[64]"></a>CRYP1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRYP1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRYP1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[65]"></a>HASH1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HASH1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HASH1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[66]"></a>FPU_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FPU_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FPU_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[67]"></a>UART7_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART7_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART7_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[68]"></a>UART8_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART8_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART8_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[69]"></a>SPI4_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI4_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI4_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[6a]"></a>SPI5_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI5_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI5_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[6b]"></a>SPI6_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI6_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI6_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[6c]"></a>SAI1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[6d]"></a>LTDC_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[6e]"></a>LTDC_ER_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_ER_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_ER_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[6f]"></a>ADC2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[70]"></a>SAI2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[71]"></a>QUADSPI_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUADSPI_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUADSPI_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[72]"></a>LPTIM1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPTIM1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPTIM1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[73]"></a>CEC_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CEC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CEC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[74]"></a>I2C4_EV_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C4_EV_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C4_EV_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[75]"></a>I2C4_ER_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C4_ER_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C4_ER_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[76]"></a>SPDIF_RX_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPDIF_RX_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPDIF_RX_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[77]"></a>OTG_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OTG_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OTG_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[78]"></a>RESERVED99_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RESERVED99_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RESERVED99_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[79]"></a>IPCC_RX0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPCC_RX0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPCC_RX0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[7a]"></a>IPCC_TX0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPCC_TX0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPCC_TX0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[7b]"></a>DMAMUX1_OVR_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMAMUX1_OVR_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMAMUX1_OVR_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[7c]"></a>IPCC_RX1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPCC_RX1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPCC_RX1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[7d]"></a>IPCC_TX1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPCC_TX1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPCC_TX1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[7e]"></a>CRYP2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRYP2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRYP2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[7f]"></a>HASH2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HASH2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HASH2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[80]"></a>I2C5_EV_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C5_EV_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C5_EV_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[81]"></a>I2C5_ER_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C5_ER_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C5_ER_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[82]"></a>GPU_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPU_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPU_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[83]"></a>DFSDM1_FLT0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DFSDM1_FLT0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DFSDM1_FLT0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[84]"></a>DFSDM1_FLT1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DFSDM1_FLT1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DFSDM1_FLT1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[85]"></a>DFSDM1_FLT2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DFSDM1_FLT2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DFSDM1_FLT2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[86]"></a>DFSDM1_FLT3_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DFSDM1_FLT3_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DFSDM1_FLT3_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[87]"></a>SAI3_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI3_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI3_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[88]"></a>DFSDM1_FLT4_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DFSDM1_FLT4_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DFSDM1_FLT4_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[89]"></a>TIM15_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM15_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM15_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[8a]"></a>TIM16_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM16_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM16_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[8b]"></a>TIM17_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM17_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM17_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[8c]"></a>TIM12_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM12_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM12_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[8d]"></a>MDIOS_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDIOS_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDIOS_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[8e]"></a>EXTI14_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI14_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI14_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[8f]"></a>MDMA_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDMA_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDMA_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[90]"></a>DSI_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSI_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSI_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[91]"></a>SDMMC2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[92]"></a>HSEM_IT2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HSEM_IT2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HSEM_IT2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[93]"></a>DFSDM1_FLT5_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DFSDM1_FLT5_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DFSDM1_FLT5_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[94]"></a>EXTI15_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI15_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI15_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[95]"></a>nCTIIRQ1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nCTIIRQ1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nCTIIRQ1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[96]"></a>nCTIIRQ2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nCTIIRQ2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nCTIIRQ2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[97]"></a>TIM13_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM13_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM13_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[98]"></a>TIM14_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM14_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM14_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[99]"></a>DAC_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[9a]"></a>RNG1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RNG1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RNG1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[9b]"></a>RNG2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RNG2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RNG2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[9c]"></a>I2C6_EV_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C6_EV_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C6_EV_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[9d]"></a>I2C6_ER_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C6_ER_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C6_ER_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[9e]"></a>SDMMC3_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC3_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC3_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[9f]"></a>LPTIM2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPTIM2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPTIM2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[a0]"></a>LPTIM3_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPTIM3_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPTIM3_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[a1]"></a>LPTIM4_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPTIM4_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPTIM4_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[a2]"></a>LPTIM5_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPTIM5_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPTIM5_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[a3]"></a>ETH1_LPI_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH1_LPI_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH1_LPI_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[a4]"></a>RESERVED143_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RESERVED143_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RESERVED143_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[a5]"></a>MPU_SEV_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_SEV_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_SEV_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[a6]"></a>RCC_WAKEUP_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_WAKEUP_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_WAKEUP_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[a7]"></a>SAI4_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI4_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI4_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[a8]"></a>DTS_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DTS_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DTS_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[a9]"></a>RESERVED148_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RESERVED148_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RESERVED148_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[aa]"></a>WAKEUP_PIN_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WAKEUP_PIN_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WAKEUP_PIN_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[196]"></a>__use_no_semihosting</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi_2.o(.text), UNUSED)

<P><STRONG><a name="[d3]"></a>__2printf</STRONG> (Thumb, 20 bytes, Stack size 24 bytes, noretval__2printf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_file
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_sys_cmd_exe
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_scan
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_exe
</UL>

<P><STRONG><a name="[d6]"></a>_printf_pre_padding</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, _printf_pad.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>

<P><STRONG><a name="[d7]"></a>_printf_post_padding</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, _printf_pad.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _printf_post_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>

<P><STRONG><a name="[d5]"></a>_printf_str</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, _printf_str.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>

<P><STRONG><a name="[bc]"></a>_printf_int_dec</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, _printf_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_u
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_d
</UL>

<P><STRONG><a name="[bf]"></a>_printf_int_hex</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, _printf_hex_int.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _printf_int_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_x
</UL>

<P><STRONG><a name="[197]"></a>_printf_longlong_hex</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, _printf_hex_int.o(.text), UNUSED)

<P><STRONG><a name="[d9]"></a>__printf</STRONG> (Thumb, 388 bytes, Stack size 40 bytes, __printf_flags_ss_wp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_percent
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_is_digit
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>

<P><STRONG><a name="[198]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[199]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[d8]"></a>_printf_int_common</STRONG> (Thumb, 178 bytes, Stack size 32 bytes, _printf_intcommon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
</UL>

<P><STRONG><a name="[19a]"></a>__lib_sel_fp_printf</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, _printf_fp_dec.o(.text), UNUSED)

<P><STRONG><a name="[e2]"></a>_printf_fp_dec_real</STRONG> (Thumb, 620 bytes, Stack size 104 bytes, _printf_fp_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec
</UL>

<P><STRONG><a name="[e5]"></a>_printf_cs_common</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_string
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char
</UL>

<P><STRONG><a name="[c1]"></a>_printf_char</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_char &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_c
</UL>

<P><STRONG><a name="[c3]"></a>_printf_string</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_string &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_s
</UL>

<P><STRONG><a name="[d4]"></a>_printf_char_file</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, _printf_char_file.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ferror
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[c7]"></a>__rt_locale</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_locale_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_common
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>

<P><STRONG><a name="[e1]"></a>_ll_udiv10</STRONG> (Thumb, 138 bytes, Stack size 12 bytes, lludiv10.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _ll_udiv10
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[e6]"></a>_printf_char_common</STRONG> (Thumb, 32 bytes, Stack size 64 bytes, _printf_char_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>
<BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_file
</UL>

<P><STRONG><a name="[e4]"></a>_printf_fp_infnan</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, _printf_fp_infnan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_fp_infnan &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>

<P><STRONG><a name="[dd]"></a>_btod_etento</STRONG> (Thumb, 224 bytes, Stack size 72 bytes, bigflt0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[e7]"></a>ferror</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ferror.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_file
</UL>

<P><STRONG><a name="[ce]"></a>exit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[168]"></a>strcmp</STRONG> (Thumb, 128 bytes, Stack size 0 bytes, strcmpv7m.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_numeric
</UL>

<P><STRONG><a name="[de]"></a>_btod_d2e</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, btod.o(CL$$btod_d2e))
<BR><BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2e_norm_op1
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[ea]"></a>_d2e_denorm_low</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, btod.o(CL$$btod_d2e_denorm_low))
<BR><BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2e_norm_op1
</UL>

<P><STRONG><a name="[e9]"></a>_d2e_norm_op1</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, btod.o(CL$$btod_d2e_norm_op1))
<BR><BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2e_denorm_low
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_d2e
</UL>

<P><STRONG><a name="[eb]"></a>__btod_div_common</STRONG> (Thumb, 696 bytes, Stack size 24 bytes, btod.o(CL$$btod_div_common))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __btod_div_common
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
</UL>

<P><STRONG><a name="[ec]"></a>_e2e</STRONG> (Thumb, 220 bytes, Stack size 24 bytes, btod.o(CL$$btod_e2e))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _e2e
</UL>
<BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
</UL>

<P><STRONG><a name="[df]"></a>_btod_ediv</STRONG> (Thumb, 42 bytes, Stack size 28 bytes, btod.o(CL$$btod_ediv))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = _btod_ediv &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_e2e
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__btod_div_common
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[e0]"></a>_btod_emul</STRONG> (Thumb, 42 bytes, Stack size 28 bytes, btod.o(CL$$btod_emul))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__btod_mult_common
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_e2e
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[ed]"></a>__btod_mult_common</STRONG> (Thumb, 580 bytes, Stack size 16 bytes, btod.o(CL$$btod_mult_common))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __btod_mult_common
</UL>
<BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
</UL>

<P><STRONG><a name="[ee]"></a>ADC_ConfigureBoostMode</STRONG> (Thumb, 146 bytes, Stack size 8 bytes, stm32mp1xx_hal_adc.o(i.ADC_ConfigureBoostMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = ADC_ConfigureBoostMode &rArr; HAL_RCCEx_GetPeriphCLKFreq &rArr; HAL_RCC_GetPCLK5Freq &rArr; HAL_RCC_GetACLKFreq &rArr; HAL_RCC_GetAXISSFreq &rArr; HAL_RCC_GetPLL2ClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_GetPeriphCLKFreq
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLK2Freq
</UL>
<BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_Init
</UL>

<P><STRONG><a name="[f1]"></a>ADC_Disable</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, stm32mp1xx_hal_adc.o(i.ADC_Disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ADC_Disable
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ADC_IsEnabled
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADCEx_Calibration_Start
</UL>

<P><STRONG><a name="[f4]"></a>ADC_Enable</STRONG> (Thumb, 130 bytes, Stack size 16 bytes, stm32mp1xx_hal_adc.o(i.ADC_Enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ADC_Enable
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ADC_IsEnabled
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_Start
</UL>

<P><STRONG><a name="[f]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32mp1xx_it.o(i.BusFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>DMA1_Stream7_IRQHandler</STRONG> (Thumb, 90 bytes, Stack size 20 bytes, adc.o(i.DMA1_Stream7_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = DMA1_Stream7_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32mp1xx_it.o(i.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[f5]"></a>HAL_ADCEx_Calibration_Start</STRONG> (Thumb, 146 bytes, Stack size 24 bytes, stm32mp1xx_hal_adc_ex.o(i.HAL_ADCEx_Calibration_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_ADCEx_Calibration_Start &rArr; ADC_Disable
</UL>
<BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Disable
</UL>
<BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_init
</UL>

<P><STRONG><a name="[f6]"></a>HAL_ADC_ConfigChannel</STRONG> (Thumb, 844 bytes, Stack size 40 bytes, stm32mp1xx_hal_adc.o(i.HAL_ADC_ConfigChannel))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HAL_ADC_ConfigChannel &rArr; LL_ADC_SetChannelSamplingTime
</UL>
<BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ADC_SetCommonPathInternalCh
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ADC_SetChannelSamplingTime
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ADC_REG_IsConversionOngoing
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ADC_IsEnabled
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ADC_INJ_IsConversionOngoing
</UL>
<BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_get_result
</UL>

<P><STRONG><a name="[13f]"></a>HAL_ADC_GetValue</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32mp1xx_hal_adc.o(i.HAL_ADC_GetValue))
<BR><BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_get_result
</UL>

<P><STRONG><a name="[fb]"></a>HAL_ADC_Init</STRONG> (Thumb, 412 bytes, Stack size 24 bytes, stm32mp1xx_hal_adc.o(i.HAL_ADC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = HAL_ADC_Init &rArr; ADC_ConfigureBoostMode &rArr; HAL_RCCEx_GetPeriphCLKFreq &rArr; HAL_RCC_GetPCLK5Freq &rArr; HAL_RCC_GetACLKFreq &rArr; HAL_RCC_GetAXISSFreq &rArr; HAL_RCC_GetPLL2ClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_MspInit
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_ConfigureBoostMode
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ADC_REG_IsConversionOngoing
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ADC_IsEnabled
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ADC_INJ_IsConversionOngoing
</UL>
<BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_init
</UL>

<P><STRONG><a name="[fc]"></a>HAL_ADC_MspInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32mp1xx_hal_adc.o(i.HAL_ADC_MspInit))
<BR><BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_Init
</UL>

<P><STRONG><a name="[fd]"></a>HAL_ADC_PollForConversion</STRONG> (Thumb, 234 bytes, Stack size 24 bytes, stm32mp1xx_hal_adc.o(i.HAL_ADC_PollForConversion))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_ADC_PollForConversion
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ADC_REG_IsTriggerSourceSWStart
</UL>
<BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_get_result
</UL>

<P><STRONG><a name="[ff]"></a>HAL_ADC_Start</STRONG> (Thumb, 228 bytes, Stack size 24 bytes, stm32mp1xx_hal_adc.o(i.HAL_ADC_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_ADC_Start &rArr; ADC_Enable
</UL>
<BR>[Calls]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Enable
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ADC_REG_IsConversionOngoing
</UL>
<BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_get_result
</UL>

<P><STRONG><a name="[100]"></a>HAL_DAC_ConfigChannel</STRONG> (Thumb, 296 bytes, Stack size 32 bytes, stm32mp1xx_hal_dac.o(i.HAL_DAC_ConfigChannel))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = HAL_DAC_ConfigChannel &rArr; HAL_RCC_GetPCLK1Freq &rArr; HAL_RCC_GetMCUFreq &rArr; HAL_RCC_GetMCUSSFreq &rArr; HAL_RCC_GetPLL3ClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK1Freq
</UL>
<BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dac_init
</UL>

<P><STRONG><a name="[150]"></a>HAL_DAC_GetValue</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32mp1xx_hal_dac.o(i.HAL_DAC_GetValue))
<BR><BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[103]"></a>HAL_DAC_Init</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, stm32mp1xx_hal_dac.o(i.HAL_DAC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = HAL_DAC_Init &rArr; HAL_DAC_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DAC_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dac_init
</UL>

<P><STRONG><a name="[104]"></a>HAL_DAC_MspInit</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, dac.o(i.HAL_DAC_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = HAL_DAC_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DAC_Init
</UL>

<P><STRONG><a name="[14f]"></a>HAL_DAC_SetValue</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, stm32mp1xx_hal_dac.o(i.HAL_DAC_SetValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = HAL_DAC_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[144]"></a>HAL_DAC_Start</STRONG> (Thumb, 84 bytes, Stack size 12 bytes, stm32mp1xx_hal_dac.o(i.HAL_DAC_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = HAL_DAC_Start
</UL>
<BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dac_init
</UL>

<P><STRONG><a name="[12c]"></a>HAL_DMA_Abort_IT</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, stm32mp1xx_hal_dma.o(i.HAL_DMA_Abort_IT))
<BR><BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[101]"></a>HAL_Delay</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, stm32mp1xx_hal.o(i.HAL_Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DAC_ConfigChannel
</UL>

<P><STRONG><a name="[105]"></a>HAL_GPIO_Init</STRONG> (Thumb, 444 bytes, Stack size 36 bytes, stm32mp1xx_hal_gpio.o(i.HAL_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_init
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_init
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DAC_MspInit
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_gpio_init
</UL>

<P><STRONG><a name="[149]"></a>HAL_GPIO_ReadPin</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32mp1xx_hal_gpio.o(i.HAL_GPIO_ReadPin))
<BR><BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_scan
</UL>

<P><STRONG><a name="[155]"></a>HAL_GPIO_TogglePin</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32mp1xx_hal_gpio.o(i.HAL_GPIO_TogglePin))
<BR><BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[14b]"></a>HAL_GPIO_WritePin</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32mp1xx_hal_gpio.o(i.HAL_GPIO_WritePin))
<BR><BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_init
</UL>

<P><STRONG><a name="[f3]"></a>HAL_GetTick</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32mp1xx_hal.o(i.HAL_GetTick))
<BR><BR>[Called By]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WaitOnFlagUntilTimeout
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_CheckIdleState
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCCEx_PLL4_Config
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCCEx_PLL3_Config
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCCEx_PLL2_Config
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PLL1_Config
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_MPUConfig
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_MCUConfig
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AXISSConfig
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_LSEConfig
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_HSEConfig
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_PollForConversion
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Enable
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Disable
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DAC_ConfigChannel
</UL>

<P><STRONG><a name="[139]"></a>HAL_IncTick</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32mp1xx_hal.o(i.HAL_IncTick))
<BR><BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[106]"></a>HAL_Init</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, stm32mp1xx_hal.o(i.HAL_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = HAL_Init &rArr; HAL_RCC_GetSystemCoreClockFreq &rArr; HAL_RCC_GetMCUFreq &rArr; HAL_RCC_GetMCUSSFreq &rArr; HAL_RCC_GetPLL3ClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSystemCoreClockFreq
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriorityGrouping
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[109]"></a>HAL_InitTick</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, stm32mp1xx_hal.o(i.HAL_InitTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_MCUConfig
</UL>

<P><STRONG><a name="[12d]"></a>HAL_MDMA_Abort_IT</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, stm32mp1xx_hal_mdma.o(i.HAL_MDMA_Abort_IT))
<BR><BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[10a]"></a>HAL_MspInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32mp1xx_hal.o(i.HAL_MspInit))
<BR><BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[138]"></a>HAL_NVIC_EnableIRQ</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32mp1xx_hal_cortex.o(i.HAL_NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer4_init
</UL>

<P><STRONG><a name="[10c]"></a>HAL_NVIC_SetPriority</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, stm32mp1xx_hal_cortex.o(i.HAL_NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer4_init
</UL>

<P><STRONG><a name="[107]"></a>HAL_NVIC_SetPriorityGrouping</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32mp1xx_hal_cortex.o(i.HAL_NVIC_SetPriorityGrouping))
<BR><BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[156]"></a>HAL_PWR_EnableBkUpAccess</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32mp1xx_hal_pwr.o(i.HAL_PWR_EnableBkUpAccess))
<BR><BR>[Called By]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_stm32_clock_init
</UL>

<P><STRONG><a name="[f0]"></a>HAL_RCCEx_GetPeriphCLKFreq</STRONG> (Thumb, 1664 bytes, Stack size 72 bytes, stm32mp1xx_hal_rcc_ex.o(i.HAL_RCCEx_GetPeriphCLKFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = HAL_RCCEx_GetPeriphCLKFreq &rArr; HAL_RCC_GetPCLK5Freq &rArr; HAL_RCC_GetACLKFreq &rArr; HAL_RCC_GetAXISSFreq &rArr; HAL_RCC_GetPLL2ClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPLL4ClockFreq
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPLL3ClockFreq
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPLL2ClockFreq
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetCKPERFreq
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK5Freq
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK3Freq
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK2Freq
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK1Freq
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetMLHCLKFreq
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetMCUFreq
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLK6Freq
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLK2Freq
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetACLKFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_ConfigureBoostMode
</UL>

<P><STRONG><a name="[119]"></a>HAL_RCCEx_PeriphCLKConfig</STRONG> (Thumb, 2776 bytes, Stack size 312 bytes, stm32mp1xx_hal_rcc_ex.o(i.HAL_RCCEx_PeriphCLKConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 388<LI>Call Chain = HAL_RCCEx_PeriphCLKConfig &rArr; HAL_RCC_OscConfig &rArr; HAL_RCC_GetMCUFreq &rArr; HAL_RCC_GetMCUSSFreq &rArr; HAL_RCC_GetPLL3ClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCCEx_PLL4_Config
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCCEx_PLL3_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_init
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
</UL>

<P><STRONG><a name="[11d]"></a>HAL_RCC_ClockConfig</STRONG> (Thumb, 302 bytes, Stack size 24 bytes, stm32mp1xx_hal_rcc.o(i.HAL_RCC_ClockConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = HAL_RCC_ClockConfig &rArr; RCC_MCUConfig &rArr; HAL_RCC_GetMCUFreq &rArr; HAL_RCC_GetMCUSSFreq &rArr; HAL_RCC_GetPLL3ClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_MPUConfig
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_MCUConfig
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AXISSConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_stm32_clock_init
</UL>

<P><STRONG><a name="[115]"></a>HAL_RCC_GetACLKFreq</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, stm32mp1xx_hal_rcc.o(i.HAL_RCC_GetACLKFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = HAL_RCC_GetACLKFreq &rArr; HAL_RCC_GetAXISSFreq &rArr; HAL_RCC_GetPLL2ClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetAXISSFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_GetPeriphCLKFreq
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK5Freq
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLK6Freq
</UL>

<P><STRONG><a name="[121]"></a>HAL_RCC_GetAXISSFreq</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, stm32mp1xx_hal_rcc.o(i.HAL_RCC_GetAXISSFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = HAL_RCC_GetAXISSFreq &rArr; HAL_RCC_GetPLL2ClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPLL2ClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetACLKFreq
</UL>

<P><STRONG><a name="[ef]"></a>HAL_RCC_GetHCLK2Freq</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32mp1xx_hal_rcc.o(i.HAL_RCC_GetHCLK2Freq))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = HAL_RCC_GetHCLK2Freq &rArr; HAL_RCC_GetMCUFreq &rArr; HAL_RCC_GetMCUSSFreq &rArr; HAL_RCC_GetPLL3ClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetMCUFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_GetPeriphCLKFreq
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_ConfigureBoostMode
</UL>

<P><STRONG><a name="[117]"></a>HAL_RCC_GetHCLK6Freq</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32mp1xx_hal_rcc.o(i.HAL_RCC_GetHCLK6Freq))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = HAL_RCC_GetHCLK6Freq &rArr; HAL_RCC_GetACLKFreq &rArr; HAL_RCC_GetAXISSFreq &rArr; HAL_RCC_GetPLL2ClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetACLKFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_GetPeriphCLKFreq
</UL>

<P><STRONG><a name="[118]"></a>HAL_RCC_GetMCUFreq</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, stm32mp1xx_hal_rcc.o(i.HAL_RCC_GetMCUFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = HAL_RCC_GetMCUFreq &rArr; HAL_RCC_GetMCUSSFreq &rArr; HAL_RCC_GetPLL3ClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetMCUSSFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSystemCoreClockFreq
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_GetPeriphCLKFreq
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_MCUConfig
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK3Freq
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK2Freq
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK1Freq
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetMLHCLKFreq
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLK2Freq
</UL>

<P><STRONG><a name="[122]"></a>HAL_RCC_GetMCUSSFreq</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, stm32mp1xx_hal_rcc.o(i.HAL_RCC_GetMCUSSFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = HAL_RCC_GetMCUSSFreq &rArr; HAL_RCC_GetPLL3ClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPLL3ClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetMCUFreq
</UL>

<P><STRONG><a name="[10f]"></a>HAL_RCC_GetMLHCLKFreq</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32mp1xx_hal_rcc.o(i.HAL_RCC_GetMLHCLKFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = HAL_RCC_GetMLHCLKFreq &rArr; HAL_RCC_GetMCUFreq &rArr; HAL_RCC_GetMCUSSFreq &rArr; HAL_RCC_GetPLL3ClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetMCUFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_GetPeriphCLKFreq
</UL>

<P><STRONG><a name="[102]"></a>HAL_RCC_GetPCLK1Freq</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, stm32mp1xx_hal_rcc.o(i.HAL_RCC_GetPCLK1Freq))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = HAL_RCC_GetPCLK1Freq &rArr; HAL_RCC_GetMCUFreq &rArr; HAL_RCC_GetMCUSSFreq &rArr; HAL_RCC_GetPLL3ClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetMCUFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_GetPeriphCLKFreq
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DAC_ConfigChannel
</UL>

<P><STRONG><a name="[110]"></a>HAL_RCC_GetPCLK2Freq</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, stm32mp1xx_hal_rcc.o(i.HAL_RCC_GetPCLK2Freq))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = HAL_RCC_GetPCLK2Freq &rArr; HAL_RCC_GetMCUFreq &rArr; HAL_RCC_GetMCUSSFreq &rArr; HAL_RCC_GetPLL3ClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetMCUFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_GetPeriphCLKFreq
</UL>

<P><STRONG><a name="[111]"></a>HAL_RCC_GetPCLK3Freq</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, stm32mp1xx_hal_rcc.o(i.HAL_RCC_GetPCLK3Freq))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = HAL_RCC_GetPCLK3Freq &rArr; HAL_RCC_GetMCUFreq &rArr; HAL_RCC_GetMCUSSFreq &rArr; HAL_RCC_GetPLL3ClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetMCUFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_GetPeriphCLKFreq
</UL>

<P><STRONG><a name="[113]"></a>HAL_RCC_GetPCLK5Freq</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, stm32mp1xx_hal_rcc.o(i.HAL_RCC_GetPCLK5Freq))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = HAL_RCC_GetPCLK5Freq &rArr; HAL_RCC_GetACLKFreq &rArr; HAL_RCC_GetAXISSFreq &rArr; HAL_RCC_GetPLL2ClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetACLKFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_GetPeriphCLKFreq
</UL>

<P><STRONG><a name="[112]"></a>HAL_RCC_GetPLL2ClockFreq</STRONG> (Thumb, 224 bytes, Stack size 12 bytes, stm32mp1xx_hal_rcc.o(i.HAL_RCC_GetPLL2ClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = HAL_RCC_GetPLL2ClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_GetPeriphCLKFreq
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetAXISSFreq
</UL>

<P><STRONG><a name="[116]"></a>HAL_RCC_GetPLL3ClockFreq</STRONG> (Thumb, 244 bytes, Stack size 12 bytes, stm32mp1xx_hal_rcc.o(i.HAL_RCC_GetPLL3ClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = HAL_RCC_GetPLL3ClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_GetPeriphCLKFreq
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetMCUSSFreq
</UL>

<P><STRONG><a name="[114]"></a>HAL_RCC_GetPLL4ClockFreq</STRONG> (Thumb, 238 bytes, Stack size 12 bytes, stm32mp1xx_hal_rcc.o(i.HAL_RCC_GetPLL4ClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = HAL_RCC_GetPLL4ClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_GetPeriphCLKFreq
</UL>

<P><STRONG><a name="[108]"></a>HAL_RCC_GetSystemCoreClockFreq</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32mp1xx_hal_rcc.o(i.HAL_RCC_GetSystemCoreClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = HAL_RCC_GetSystemCoreClockFreq &rArr; HAL_RCC_GetMCUFreq &rArr; HAL_RCC_GetMCUSSFreq &rArr; HAL_RCC_GetPLL3ClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetMCUFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[123]"></a>HAL_RCC_HSEConfig</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, stm32mp1xx_hal_rcc.o(i.HAL_RCC_HSEConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_RCC_HSEConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
</UL>

<P><STRONG><a name="[124]"></a>HAL_RCC_LSEConfig</STRONG> (Thumb, 154 bytes, Stack size 24 bytes, stm32mp1xx_hal_rcc.o(i.HAL_RCC_LSEConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_RCC_LSEConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
</UL>

<P><STRONG><a name="[11c]"></a>HAL_RCC_OscConfig</STRONG> (Thumb, 938 bytes, Stack size 40 bytes, stm32mp1xx_hal_rcc.o(i.HAL_RCC_OscConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = HAL_RCC_OscConfig &rArr; HAL_RCC_GetMCUFreq &rArr; HAL_RCC_GetMCUSSFreq &rArr; HAL_RCC_GetPLL3ClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCCEx_PLL4_Config
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCCEx_PLL3_Config
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCCEx_PLL2_Config
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PLL1_Config
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_LSEConfig
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_HSEConfig
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetMCUFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_stm32_clock_init
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
</UL>

<P><STRONG><a name="[10b]"></a>HAL_SYSTICK_Config</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, stm32mp1xx_hal_cortex.o(i.HAL_SYSTICK_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_SYSTICK_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[127]"></a>HAL_TIM_Base_Init</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, stm32mp1xx_hal_tim.o(i.HAL_TIM_Base_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = HAL_TIM_Base_Init &rArr; TIM_Base_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_MspInit
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer4_init
</UL>

<P><STRONG><a name="[128]"></a>HAL_TIM_Base_MspInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32mp1xx_hal_tim.o(i.HAL_TIM_Base_MspInit))
<BR><BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
</UL>

<P><STRONG><a name="[158]"></a>HAL_TIM_Base_Start_IT</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, stm32mp1xx_hal_tim.o(i.HAL_TIM_Base_Start_IT))
<BR><BR>[Called By]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer4_init
</UL>

<P><STRONG><a name="[132]"></a>HAL_UARTEx_RxFifoFullCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32mp1xx_hal_uart_ex.o(i.HAL_UARTEx_RxFifoFullCallback))
<BR><BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[131]"></a>HAL_UARTEx_TxFifoEmptyCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32mp1xx_hal_uart_ex.o(i.HAL_UARTEx_TxFifoEmptyCallback))
<BR><BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[12f]"></a>HAL_UARTEx_WakeupCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32mp1xx_hal_uart_ex.o(i.HAL_UARTEx_WakeupCallback))
<BR><BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[12e]"></a>HAL_UART_ErrorCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32mp1xx_hal_uart.o(i.HAL_UART_ErrorCallback))
<BR><BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_MDMAAbortOnError
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DMAAbortOnError
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[13a]"></a>HAL_UART_GetState</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32mp1xx_hal_uart.o(i.HAL_UART_GetState))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_IRQHandler
</UL>

<P><STRONG><a name="[12a]"></a>HAL_UART_IRQHandler</STRONG> (Thumb, 468 bytes, Stack size 24 bytes, stm32mp1xx_hal_uart.o(i.HAL_UART_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_UART_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_TxCpltCallback
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_ErrorCallback
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UARTEx_WakeupCallback
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UARTEx_TxFifoEmptyCallback
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UARTEx_RxFifoFullCallback
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_EndRxTransfer
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Abort_IT
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MDMA_Abort_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_IRQHandler
</UL>

<P><STRONG><a name="[133]"></a>HAL_UART_Init</STRONG> (Thumb, 106 bytes, Stack size 8 bytes, stm32mp1xx_hal_uart.o(i.HAL_UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 772<LI>Call Chain = HAL_UART_Init &rArr; HAL_UART_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; HAL_RCC_OscConfig &rArr; HAL_RCC_GetMCUFreq &rArr; HAL_RCC_GetMCUSSFreq &rArr; HAL_RCC_GetPLL3ClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_CheckIdleState
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_AdvFeatureConfig
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_init
</UL>

<P><STRONG><a name="[134]"></a>HAL_UART_MspInit</STRONG> (Thumb, 100 bytes, Stack size 376 bytes, usart.o(i.HAL_UART_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 764<LI>Call Chain = HAL_UART_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; HAL_RCC_OscConfig &rArr; HAL_RCC_GetMCUFreq &rArr; HAL_RCC_GetMCUSSFreq &rArr; HAL_RCC_GetPLL3ClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[13b]"></a>HAL_UART_Receive_IT</STRONG> (Thumb, 234 bytes, Stack size 16 bytes, stm32mp1xx_hal_uart.o(i.HAL_UART_Receive_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_UART_Receive_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_init
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_IRQHandler
</UL>

<P><STRONG><a name="[13d]"></a>HAL_UART_RxCpltCallback</STRONG> (Thumb, 76 bytes, Stack size 12 bytes, usart.o(i.HAL_UART_RxCpltCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = HAL_UART_RxCpltCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RxISR_8BIT_FIFOEN
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RxISR_8BIT
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RxISR_16BIT_FIFOEN
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RxISR_16BIT
</UL>

<P><STRONG><a name="[130]"></a>HAL_UART_TxCpltCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32mp1xx_hal_uart.o(i.HAL_UART_TxCpltCallback))
<BR><BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[d]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32mp1xx_it.o(i.HardFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32mp1xx_it.o(i.MemManage_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32mp1xx_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32mp1xx_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[126]"></a>RCCEx_PLL2_Config</STRONG> (Thumb, 468 bytes, Stack size 16 bytes, stm32mp1xx_hal_rcc_ex.o(i.RCCEx_PLL2_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RCCEx_PLL2_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
</UL>

<P><STRONG><a name="[11b]"></a>RCCEx_PLL3_Config</STRONG> (Thumb, 384 bytes, Stack size 24 bytes, stm32mp1xx_hal_rcc_ex.o(i.RCCEx_PLL3_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
</UL>

<P><STRONG><a name="[11a]"></a>RCCEx_PLL4_Config</STRONG> (Thumb, 358 bytes, Stack size 24 bytes, stm32mp1xx_hal_rcc_ex.o(i.RCCEx_PLL4_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RCCEx_PLL4_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
</UL>

<P><STRONG><a name="[11f]"></a>RCC_AXISSConfig</STRONG> (Thumb, 176 bytes, Stack size 24 bytes, stm32mp1xx_hal_rcc.o(i.RCC_AXISSConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RCC_AXISSConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
</UL>

<P><STRONG><a name="[10e]"></a>RCC_GetCKPERFreq</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, stm32mp1xx_hal_rcc.o(i.RCC_GetCKPERFreq))
<BR><BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_GetPeriphCLKFreq
</UL>

<P><STRONG><a name="[120]"></a>RCC_MCUConfig</STRONG> (Thumb, 196 bytes, Stack size 24 bytes, stm32mp1xx_hal_rcc.o(i.RCC_MCUConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = RCC_MCUConfig &rArr; HAL_RCC_GetMCUFreq &rArr; HAL_RCC_GetMCUSSFreq &rArr; HAL_RCC_GetPLL3ClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetMCUFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
</UL>

<P><STRONG><a name="[11e]"></a>RCC_MPUConfig</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, stm32mp1xx_hal_rcc.o(i.RCC_MPUConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RCC_MPUConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
</UL>

<P><STRONG><a name="[125]"></a>RCC_PLL1_Config</STRONG> (Thumb, 446 bytes, Stack size 16 bytes, stm32mp1xx_hal_rcc.o(i.RCC_PLL1_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RCC_PLL1_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
</UL>

<P><STRONG><a name="[11]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32mp1xx_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>SysTick_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32mp1xx_it.o(i.SysTick_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_IncTick
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[ab]"></a>SystemInit</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, system_stm32mp1xx.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(.text)
</UL>
<P><STRONG><a name="[33]"></a>TIM4_IRQHandler</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, usmart_port.o(i.TIM4_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM4_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[129]"></a>TIM_Base_SetConfig</STRONG> (Thumb, 162 bytes, Stack size 36 bytes, stm32mp1xx_hal_tim.o(i.TIM_Base_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = TIM_Base_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
</UL>

<P><STRONG><a name="[49]"></a>UART4_IRQHandler</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, usart.o(i.UART4_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = UART4_IRQHandler &rArr; HAL_UART_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Receive_IT
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_GetState
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[136]"></a>UART_AdvFeatureConfig</STRONG> (Thumb, 200 bytes, Stack size 0 bytes, stm32mp1xx_hal_uart.o(i.UART_AdvFeatureConfig))
<BR><BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[137]"></a>UART_CheckIdleState</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, stm32mp1xx_hal_uart.o(i.UART_CheckIdleState))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = UART_CheckIdleState &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WaitOnFlagUntilTimeout
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[135]"></a>UART_SetConfig</STRONG> (Thumb, 1470 bytes, Stack size 48 bytes, stm32mp1xx_hal_uart.o(i.UART_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = UART_SetConfig &rArr; HAL_RCC_GetPCLK5Freq &rArr; HAL_RCC_GetACLKFreq &rArr; HAL_RCC_GetAXISSFreq &rArr; HAL_RCC_GetPLL2ClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPLL4ClockFreq
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPLL3ClockFreq
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK5Freq
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK2Freq
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK1Freq
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[13c]"></a>UART_WaitOnFlagUntilTimeout</STRONG> (Thumb, 160 bytes, Stack size 32 bytes, stm32mp1xx_hal_uart.o(i.UART_WaitOnFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_CheckIdleState
</UL>

<P><STRONG><a name="[10]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32mp1xx_it.o(i.UsageFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[e3]"></a>__ARM_fpclassify</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, fpclassify.o(i.__ARM_fpclassify))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_fpclassify
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>

<P><STRONG><a name="[da]"></a>_is_digit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, __printf_wp.o(i._is_digit))
<BR><BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[d2]"></a>_sys_exit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usart.o(i._sys_exit))
<BR><BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[13e]"></a>adc_get_result</STRONG> (Thumb, 60 bytes, Stack size 32 bytes, adc.o(i.adc_get_result))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = adc_get_result &rArr; HAL_ADC_ConfigChannel &rArr; LL_ADC_SetChannelSamplingTime
</UL>
<BR>[Calls]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_Start
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_PollForConversion
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_GetValue
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_ConfigChannel
</UL>
<BR>[Called By]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_get_result_average
</UL>

<P><STRONG><a name="[140]"></a>adc_get_result_average</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, adc.o(i.adc_get_result_average))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = adc_get_result_average &rArr; adc_get_result &rArr; HAL_ADC_ConfigChannel &rArr; LL_ADC_SetChannelSamplingTime
</UL>
<BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_get_result
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[141]"></a>adc_gpio_init</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, adc.o(i.adc_gpio_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = adc_gpio_init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_init
</UL>

<P><STRONG><a name="[142]"></a>adc_init</STRONG> (Thumb, 96 bytes, Stack size 352 bytes, adc.o(i.adc_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 740<LI>Call Chain = adc_init &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; HAL_RCC_OscConfig &rArr; HAL_RCC_GetMCUFreq &rArr; HAL_RCC_GetMCUSSFreq &rArr; HAL_RCC_GetPLL3ClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADCEx_Calibration_Start
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_Init
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_gpio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[143]"></a>dac_init</STRONG> (Thumb, 54 bytes, Stack size 48 bytes, dac.o(i.dac_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = dac_init &rArr; HAL_DAC_Init &rArr; HAL_DAC_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DAC_Start
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DAC_Init
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DAC_ConfigChannel
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[145]"></a>delay</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, delay.o(i.delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = delay &rArr; delay_short
</UL>
<BR>[Calls]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_short
</UL>
<BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_scan
</UL>

<P><STRONG><a name="[14e]"></a>delay_init</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, delay.o(i.delay_init))
<BR><BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5]"></a>delay_ms</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, delay.o(i.delay_ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = delay_ms &rArr; delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_get_result_average
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usmart_config.o(.data)
</UL>
<P><STRONG><a name="[146]"></a>delay_short</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, delay.o(i.delay_short))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = delay_short
</UL>
<BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
</UL>

<P><STRONG><a name="[6]"></a>delay_us</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, delay.o(i.delay_us))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usmart_config.o(.data)
</UL>
<P><STRONG><a name="[ad]"></a>fputc</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, usart.o(i.fputc))
<BR>[Address Reference Count : 1]<UL><LI> _printf_char_file.o(.text)
</UL>
<P><STRONG><a name="[147]"></a>key_init</STRONG> (Thumb, 70 bytes, Stack size 32 bytes, key.o(i.key_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = key_init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[148]"></a>key_scan</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, key.o(i.key_scan))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = key_scan &rArr; delay &rArr; delay_short
</UL>
<BR>[Calls]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ReadPin
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[14a]"></a>led_init</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, led.o(i.led_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = led_init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[cd]"></a>main</STRONG> (Thumb, 278 bytes, Stack size 8 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 788 + Unknown Stack Size
<LI>Call Chain = main &rArr; usart_init &rArr; HAL_UART_Init &rArr; HAL_UART_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; HAL_RCC_OscConfig &rArr; HAL_RCC_GetMCUFreq &rArr; HAL_RCC_GetMCUSSFreq &rArr; HAL_RCC_GetPLL3ClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_init
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_stm32_clock_init
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_init
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_scan
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_init
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_init
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dac_init
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_init
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_get_result_average
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_TogglePin
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DAC_SetValue
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DAC_GetValue
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[3]"></a>read_addr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, usmart.o(i.read_addr))
<BR>[Address Reference Count : 1]<UL><LI> usmart_config.o(.data)
</UL>
<P><STRONG><a name="[14c]"></a>sys_stm32_clock_init</STRONG> (Thumb, 240 bytes, Stack size 360 bytes, sys.o(i.sys_stm32_clock_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 444<LI>Call Chain = sys_stm32_clock_init &rArr; HAL_RCC_ClockConfig &rArr; RCC_MCUConfig &rArr; HAL_RCC_GetMCUFreq &rArr; HAL_RCC_GetMCUSSFreq &rArr; HAL_RCC_GetPLL3ClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWR_EnableBkUpAccess
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[157]"></a>timer4_init</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, usmart_port.o(i.timer4_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = timer4_init &rArr; HAL_TIM_Base_Init &rArr; TIM_Base_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Start_IT
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_init
</UL>

<P><STRONG><a name="[14d]"></a>usart_init</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, usart.o(i.usart_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 780<LI>Call Chain = usart_init &rArr; HAL_UART_Init &rArr; HAL_UART_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; HAL_RCC_OscConfig &rArr; HAL_RCC_GetMCUFreq &rArr; HAL_RCC_GetMCUSSFreq &rArr; HAL_RCC_GetPLL3ClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Receive_IT
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8]"></a>usmart_cmd_rec</STRONG> (Thumb, 144 bytes, Stack size 96 bytes, usmart.o(i.usmart_cmd_rec))
<BR><BR>[Stack]<UL><LI>Max Depth = 364<LI>Call Chain = usmart_cmd_rec &rArr; usmart_get_fparam &rArr; usmart_str2num
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_strcmp
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_get_fparam
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_get_fname
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usmart_config.o(.data)
</UL>
<P><STRONG><a name="[9]"></a>usmart_exe</STRONG> (Thumb, 510 bytes, Stack size 128 bytes, usmart.o(i.usmart_exe))
<BR><BR>[Stack]<UL><LI>Max Depth = 272 + Unknown Stack Size
<LI>Call Chain = usmart_exe &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_timx_reset_time
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_timx_get_time
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_get_parmpos
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_get_fname
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usmart_config.o(.data)
</UL>
<P><STRONG><a name="[160]"></a>usmart_get_aparm</STRONG> (Thumb, 164 bytes, Stack size 20 bytes, usmart_str.o(i.usmart_get_aparm))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = usmart_get_aparm
</UL>
<BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_get_fparam
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_sys_cmd_exe
</UL>

<P><STRONG><a name="[167]"></a>usmart_get_cmdname</STRONG> (Thumb, 46 bytes, Stack size 12 bytes, usmart_str.o(i.usmart_get_cmdname))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = usmart_get_cmdname
</UL>
<BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_sys_cmd_exe
</UL>

<P><STRONG><a name="[159]"></a>usmart_get_fname</STRONG> (Thumb, 352 bytes, Stack size 60 bytes, usmart_str.o(i.usmart_get_fname))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = usmart_get_fname
</UL>
<BR>[Calls]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_search_nextc
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_sys_cmd_exe
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_exe
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_cmd_rec
</UL>

<P><STRONG><a name="[15b]"></a>usmart_get_fparam</STRONG> (Thumb, 202 bytes, Stack size 240 bytes, usmart_str.o(i.usmart_get_fparam))
<BR><BR>[Stack]<UL><LI>Max Depth = 268<LI>Call Chain = usmart_get_fparam &rArr; usmart_str2num
</UL>
<BR>[Calls]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_strlen
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_strcopy
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_str2num
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_get_parmpos
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_get_aparm
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_cmd_rec
</UL>

<P><STRONG><a name="[164]"></a>usmart_get_input_string</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, usmart_port.o(i.usmart_get_input_string))
<BR><BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_scan
</UL>

<P><STRONG><a name="[15c]"></a>usmart_get_parmpos</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, usmart_str.o(i.usmart_get_parmpos))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = usmart_get_parmpos
</UL>
<BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_get_fparam
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_exe
</UL>

<P><STRONG><a name="[7]"></a>usmart_init</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, usmart.o(i.usmart_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = usmart_init &rArr; timer4_init &rArr; HAL_TIM_Base_Init &rArr; TIM_Base_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer4_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usmart_config.o(.data)
</UL>
<P><STRONG><a name="[166]"></a>usmart_pow</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, usmart_str.o(i.usmart_pow))
<BR><BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_str2num
</UL>

<P><STRONG><a name="[a]"></a>usmart_scan</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, usmart.o(i.usmart_scan))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = usmart_scan &rArr; usmart_sys_cmd_exe &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_get_input_string
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_sys_cmd_exe
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usmart_config.o(.data)
</UL>
<P><STRONG><a name="[15f]"></a>usmart_search_nextc</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, usmart_str.o(i.usmart_search_nextc))
<BR><BR>[Calls]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_search_nextc
</UL>
<BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_search_nextc
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_get_fname
</UL>

<P><STRONG><a name="[161]"></a>usmart_str2num</STRONG> (Thumb, 214 bytes, Stack size 28 bytes, usmart_str.o(i.usmart_str2num))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = usmart_str2num
</UL>
<BR>[Calls]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_pow
</UL>
<BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_get_fparam
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_sys_cmd_exe
</UL>

<P><STRONG><a name="[15a]"></a>usmart_strcmp</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, usmart_str.o(i.usmart_strcmp))
<BR><BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_strcmp
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_get_fname
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_sys_cmd_exe
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_cmd_rec
</UL>

<P><STRONG><a name="[163]"></a>usmart_strcopy</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, usmart_str.o(i.usmart_strcopy))
<BR><BR>[Calls]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_strcopy
</UL>
<BR>[Called By]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_strcopy
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_get_fparam
</UL>

<P><STRONG><a name="[162]"></a>usmart_strlen</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, usmart_str.o(i.usmart_strlen))
<BR><BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_get_fparam
</UL>

<P><STRONG><a name="[165]"></a>usmart_sys_cmd_exe</STRONG> (Thumb, 1458 bytes, Stack size 72 bytes, usmart.o(i.usmart_sys_cmd_exe))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = usmart_sys_cmd_exe &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_strcmp
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_str2num
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_get_fname
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_get_cmdname
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_get_aparm
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_scan
</UL>

<P><STRONG><a name="[15e]"></a>usmart_timx_get_time</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, usmart_port.o(i.usmart_timx_get_time))
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_exe
</UL>

<P><STRONG><a name="[15d]"></a>usmart_timx_reset_time</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, usmart_port.o(i.usmart_timx_reset_time))
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_exe
</UL>

<P><STRONG><a name="[4]"></a>write_addr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, usmart.o(i.write_addr))
<BR>[Address Reference Count : 1]<UL><LI> usmart_config.o(.data)
</UL>
<P><STRONG><a name="[c9]"></a>_get_lc_numeric</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, lc_numeric_c.o(locale$$code))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _get_lc_numeric
</UL>
<BR>[Calls]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_numeric_2
</UL>

<P><STRONG><a name="[154]"></a>__aeabi_d2f</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, d2f.o(x$fpl$d2f))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[169]"></a>_d2f</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, d2f.o(x$fpl$d2f), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fretinf
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[152]"></a>__aeabi_ui2d</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dfltu))
<BR><BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[19b]"></a>_dfltu</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dfltu), UNUSED)

<P><STRONG><a name="[153]"></a>__aeabi_dmul</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dmul.o(x$fpl$dmul))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[16c]"></a>_dmul</STRONG> (Thumb, 332 bytes, Stack size 32 bytes, dmul.o(x$fpl$dmul), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[16b]"></a>__fpl_dnaninf</STRONG> (Thumb, 156 bytes, Stack size 16 bytes, dnaninf.o(x$fpl$dnaninf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dmul
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2f
</UL>

<P><STRONG><a name="[16d]"></a>__fpl_dretinf</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, dretinf.o(x$fpl$dretinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_f2d
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dmul
</UL>

<P><STRONG><a name="[151]"></a>__aeabi_f2d</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, f2d.o(x$fpl$f2d))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_f2d
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[16e]"></a>_f2d</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, f2d.o(x$fpl$f2d), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
</UL>

<P><STRONG><a name="[16f]"></a>__fpl_fnaninf</STRONG> (Thumb, 140 bytes, Stack size 8 bytes, fnaninf.o(x$fpl$fnaninf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_f2d
</UL>

<P><STRONG><a name="[c5]"></a>_fp_init</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fpinit.o(x$fpl$fpinit))
<BR><BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_fp_1
</UL>

<P><STRONG><a name="[19c]"></a>__fplib_config_fpu_vfp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)

<P><STRONG><a name="[19d]"></a>__fplib_config_pureend_doubles</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)

<P><STRONG><a name="[16a]"></a>__fpl_fretinf</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fretinf.o(x$fpl$fretinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2f
</UL>

<P><STRONG><a name="[ba]"></a>_printf_fp_dec</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, printf1.o(x$fpl$printf1))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = _printf_fp_dec &rArr; _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_f
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[10d]"></a>__NVIC_SetPriority</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32mp1xx_hal_cortex.o(i.__NVIC_SetPriority))
<BR><BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>

<P><STRONG><a name="[af]"></a>UART_DMAAbortOnError</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, stm32mp1xx_hal_uart.o(i.UART_DMAAbortOnError))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART_DMAAbortOnError
</UL>
<BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_ErrorCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32mp1xx_hal_uart.o(i.HAL_UART_IRQHandler)
</UL>
<P><STRONG><a name="[12b]"></a>UART_EndRxTransfer</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32mp1xx_hal_uart.o(i.UART_EndRxTransfer))
<BR><BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[b0]"></a>UART_MDMAAbortOnError</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, stm32mp1xx_hal_uart.o(i.UART_MDMAAbortOnError))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART_MDMAAbortOnError
</UL>
<BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_ErrorCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32mp1xx_hal_uart.o(i.HAL_UART_IRQHandler)
</UL>
<P><STRONG><a name="[b4]"></a>UART_RxISR_16BIT</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, stm32mp1xx_hal_uart.o(i.UART_RxISR_16BIT))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = UART_RxISR_16BIT &rArr; HAL_UART_RxCpltCallback
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_RxCpltCallback
</UL>
<BR>[Address Reference Count : 2]<UL><LI> stm32mp1xx_hal_uart.o(i.HAL_UART_Receive_IT)
<LI> stm32mp1xx_hal_uart.o(i.UART_RxISR_16BIT_FIFOEN)
</UL>
<P><STRONG><a name="[b2]"></a>UART_RxISR_16BIT_FIFOEN</STRONG> (Thumb, 152 bytes, Stack size 16 bytes, stm32mp1xx_hal_uart.o(i.UART_RxISR_16BIT_FIFOEN))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = UART_RxISR_16BIT_FIFOEN &rArr; HAL_UART_RxCpltCallback
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_RxCpltCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32mp1xx_hal_uart.o(i.HAL_UART_Receive_IT)
</UL>
<P><STRONG><a name="[b3]"></a>UART_RxISR_8BIT</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, stm32mp1xx_hal_uart.o(i.UART_RxISR_8BIT))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = UART_RxISR_8BIT &rArr; HAL_UART_RxCpltCallback
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_RxCpltCallback
</UL>
<BR>[Address Reference Count : 2]<UL><LI> stm32mp1xx_hal_uart.o(i.HAL_UART_Receive_IT)
<LI> stm32mp1xx_hal_uart.o(i.UART_RxISR_8BIT_FIFOEN)
</UL>
<P><STRONG><a name="[b1]"></a>UART_RxISR_8BIT_FIFOEN</STRONG> (Thumb, 152 bytes, Stack size 16 bytes, stm32mp1xx_hal_uart.o(i.UART_RxISR_8BIT_FIFOEN))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = UART_RxISR_8BIT_FIFOEN &rArr; HAL_UART_RxCpltCallback
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_RxCpltCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32mp1xx_hal_uart.o(i.HAL_UART_Receive_IT)
</UL>
<P><STRONG><a name="[f8]"></a>LL_ADC_INJ_IsConversionOngoing</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32mp1xx_hal_adc.o(i.LL_ADC_INJ_IsConversionOngoing))
<BR><BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_Init
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_ConfigChannel
</UL>

<P><STRONG><a name="[f2]"></a>LL_ADC_IsEnabled</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32mp1xx_hal_adc.o(i.LL_ADC_IsEnabled))
<BR><BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_Init
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_ConfigChannel
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Enable
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Disable
</UL>

<P><STRONG><a name="[f7]"></a>LL_ADC_REG_IsConversionOngoing</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32mp1xx_hal_adc.o(i.LL_ADC_REG_IsConversionOngoing))
<BR><BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_Start
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_Init
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_ConfigChannel
</UL>

<P><STRONG><a name="[fe]"></a>LL_ADC_REG_IsTriggerSourceSWStart</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32mp1xx_hal_adc.o(i.LL_ADC_REG_IsTriggerSourceSWStart))
<BR><BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_PollForConversion
</UL>

<P><STRONG><a name="[f9]"></a>LL_ADC_SetChannelSamplingTime</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, stm32mp1xx_hal_adc.o(i.LL_ADC_SetChannelSamplingTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LL_ADC_SetChannelSamplingTime
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_ConfigChannel
</UL>

<P><STRONG><a name="[fa]"></a>LL_ADC_SetCommonPathInternalCh</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32mp1xx_hal_adc.o(i.LL_ADC_SetCommonPathInternalCh))
<BR><BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_ConfigChannel
</UL>

<P><STRONG><a name="[dc]"></a>_fp_digits</STRONG> (Thumb, 432 bytes, Stack size 96 bytes, _printf_fp_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_d2e
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ll_udiv10
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>

<P><STRONG><a name="[ae]"></a>_printf_input_char</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _printf_char_common.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> _printf_char_common.o(.text)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
