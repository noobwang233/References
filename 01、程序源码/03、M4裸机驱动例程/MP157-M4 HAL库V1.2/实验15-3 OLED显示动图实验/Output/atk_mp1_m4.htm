<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [..\..\Output\atk_mp1_m4.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image ..\..\Output\atk_mp1_m4.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Sat Feb 20 10:14:10 2021
<BR><P>
<H3>Maximum Stack Usage =        460 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_entry_main &rArr; main &rArr; sys_stm32_clock_init &rArr; HAL_RCC_ClockConfig &rArr; RCC_MCUConfig &rArr; HAL_RCC_GetMCUFreq &rArr; HAL_RCC_GetMCUSSFreq &rArr; HAL_RCC_GetPLL3ClockFreq
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[c]">WWDG1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[c]">WWDG1_IRQHandler</a><BR>
 <LI><a href="#[d]">PVD_AVD_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[d]">PVD_AVD_IRQHandler</a><BR>
 <LI><a href="#[e]">TAMP_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[e]">TAMP_IRQHandler</a><BR>
 <LI><a href="#[f]">RTC_WKUP_ALARM_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[f]">RTC_WKUP_ALARM_IRQHandler</a><BR>
 <LI><a href="#[10]">RESERVED4_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[10]">RESERVED4_IRQHandler</a><BR>
 <LI><a href="#[11]">RCC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[11]">RCC_IRQHandler</a><BR>
 <LI><a href="#[12]">EXTI0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[12]">EXTI0_IRQHandler</a><BR>
 <LI><a href="#[13]">EXTI1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[13]">EXTI1_IRQHandler</a><BR>
 <LI><a href="#[14]">EXTI2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[14]">EXTI2_IRQHandler</a><BR>
 <LI><a href="#[15]">EXTI3_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[15]">EXTI3_IRQHandler</a><BR>
 <LI><a href="#[16]">EXTI4_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[16]">EXTI4_IRQHandler</a><BR>
 <LI><a href="#[17]">DMA1_Stream0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[17]">DMA1_Stream0_IRQHandler</a><BR>
 <LI><a href="#[18]">DMA1_Stream1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[18]">DMA1_Stream1_IRQHandler</a><BR>
 <LI><a href="#[19]">DMA1_Stream2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[19]">DMA1_Stream2_IRQHandler</a><BR>
 <LI><a href="#[1a]">DMA1_Stream3_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1a]">DMA1_Stream3_IRQHandler</a><BR>
 <LI><a href="#[1b]">DMA1_Stream4_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1b]">DMA1_Stream4_IRQHandler</a><BR>
 <LI><a href="#[1c]">DMA1_Stream5_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1c]">DMA1_Stream5_IRQHandler</a><BR>
 <LI><a href="#[1d]">DMA1_Stream6_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1d]">DMA1_Stream6_IRQHandler</a><BR>
 <LI><a href="#[1e]">ADC1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1e]">ADC1_IRQHandler</a><BR>
 <LI><a href="#[1f]">FDCAN1_IT0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1f]">FDCAN1_IT0_IRQHandler</a><BR>
 <LI><a href="#[20]">FDCAN2_IT0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[20]">FDCAN2_IT0_IRQHandler</a><BR>
 <LI><a href="#[21]">FDCAN1_IT1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[21]">FDCAN1_IT1_IRQHandler</a><BR>
 <LI><a href="#[22]">FDCAN2_IT1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[22]">FDCAN2_IT1_IRQHandler</a><BR>
 <LI><a href="#[23]">EXTI5_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[23]">EXTI5_IRQHandler</a><BR>
 <LI><a href="#[24]">TIM1_BRK_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[24]">TIM1_BRK_IRQHandler</a><BR>
 <LI><a href="#[25]">TIM1_UP_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[25]">TIM1_UP_IRQHandler</a><BR>
 <LI><a href="#[26]">TIM1_TRG_COM_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[26]">TIM1_TRG_COM_IRQHandler</a><BR>
 <LI><a href="#[27]">TIM1_CC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[27]">TIM1_CC_IRQHandler</a><BR>
 <LI><a href="#[28]">TIM2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[28]">TIM2_IRQHandler</a><BR>
 <LI><a href="#[29]">TIM3_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[29]">TIM3_IRQHandler</a><BR>
 <LI><a href="#[2a]">TIM4_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2a]">TIM4_IRQHandler</a><BR>
 <LI><a href="#[2b]">I2C1_EV_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2b]">I2C1_EV_IRQHandler</a><BR>
 <LI><a href="#[2c]">I2C1_ER_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2c]">I2C1_ER_IRQHandler</a><BR>
 <LI><a href="#[2d]">I2C2_EV_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2d]">I2C2_EV_IRQHandler</a><BR>
 <LI><a href="#[2e]">I2C2_ER_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2e]">I2C2_ER_IRQHandler</a><BR>
 <LI><a href="#[2f]">SPI1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2f]">SPI1_IRQHandler</a><BR>
 <LI><a href="#[30]">SPI2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[30]">SPI2_IRQHandler</a><BR>
 <LI><a href="#[31]">USART1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[31]">USART1_IRQHandler</a><BR>
 <LI><a href="#[32]">USART2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[32]">USART2_IRQHandler</a><BR>
 <LI><a href="#[33]">USART3_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[33]">USART3_IRQHandler</a><BR>
 <LI><a href="#[34]">EXTI10_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[34]">EXTI10_IRQHandler</a><BR>
 <LI><a href="#[35]">RTC_TIMESTAMP_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[35]">RTC_TIMESTAMP_IRQHandler</a><BR>
 <LI><a href="#[36]">EXTI11_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[36]">EXTI11_IRQHandler</a><BR>
 <LI><a href="#[37]">TIM8_BRK_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[37]">TIM8_BRK_IRQHandler</a><BR>
 <LI><a href="#[38]">TIM8_UP_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[38]">TIM8_UP_IRQHandler</a><BR>
 <LI><a href="#[39]">TIM8_TRG_COM_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[39]">TIM8_TRG_COM_IRQHandler</a><BR>
 <LI><a href="#[3a]">TIM8_CC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3a]">TIM8_CC_IRQHandler</a><BR>
 <LI><a href="#[3b]">DMA1_Stream7_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3b]">DMA1_Stream7_IRQHandler</a><BR>
 <LI><a href="#[3c]">FMC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3c]">FMC_IRQHandler</a><BR>
 <LI><a href="#[3d]">SDMMC1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3d]">SDMMC1_IRQHandler</a><BR>
 <LI><a href="#[3e]">TIM5_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3e]">TIM5_IRQHandler</a><BR>
 <LI><a href="#[3f]">SPI3_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3f]">SPI3_IRQHandler</a><BR>
 <LI><a href="#[41]">UART5_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[41]">UART5_IRQHandler</a><BR>
 <LI><a href="#[42]">TIM6_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[42]">TIM6_IRQHandler</a><BR>
 <LI><a href="#[43]">TIM7_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[43]">TIM7_IRQHandler</a><BR>
 <LI><a href="#[44]">DMA2_Stream0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[44]">DMA2_Stream0_IRQHandler</a><BR>
 <LI><a href="#[45]">DMA2_Stream1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[45]">DMA2_Stream1_IRQHandler</a><BR>
 <LI><a href="#[46]">DMA2_Stream2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[46]">DMA2_Stream2_IRQHandler</a><BR>
 <LI><a href="#[47]">DMA2_Stream3_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[47]">DMA2_Stream3_IRQHandler</a><BR>
 <LI><a href="#[48]">DMA2_Stream4_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[48]">DMA2_Stream4_IRQHandler</a><BR>
 <LI><a href="#[49]">ETH1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[49]">ETH1_IRQHandler</a><BR>
 <LI><a href="#[4a]">ETH1_WKUP_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4a]">ETH1_WKUP_IRQHandler</a><BR>
 <LI><a href="#[4b]">FDCAN_CAL_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4b]">FDCAN_CAL_IRQHandler</a><BR>
 <LI><a href="#[4c]">EXTI6_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4c]">EXTI6_IRQHandler</a><BR>
 <LI><a href="#[4d]">EXTI7_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4d]">EXTI7_IRQHandler</a><BR>
 <LI><a href="#[4e]">EXTI8_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4e]">EXTI8_IRQHandler</a><BR>
 <LI><a href="#[4f]">EXTI9_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4f]">EXTI9_IRQHandler</a><BR>
 <LI><a href="#[50]">DMA2_Stream5_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[50]">DMA2_Stream5_IRQHandler</a><BR>
 <LI><a href="#[51]">DMA2_Stream6_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[51]">DMA2_Stream6_IRQHandler</a><BR>
 <LI><a href="#[52]">DMA2_Stream7_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[52]">DMA2_Stream7_IRQHandler</a><BR>
 <LI><a href="#[53]">USART6_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[53]">USART6_IRQHandler</a><BR>
 <LI><a href="#[54]">I2C3_EV_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[54]">I2C3_EV_IRQHandler</a><BR>
 <LI><a href="#[55]">I2C3_ER_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[55]">I2C3_ER_IRQHandler</a><BR>
 <LI><a href="#[56]">USBH_OHCI_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[56]">USBH_OHCI_IRQHandler</a><BR>
 <LI><a href="#[57]">USBH_EHCI_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[57]">USBH_EHCI_IRQHandler</a><BR>
 <LI><a href="#[58]">EXTI12_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[58]">EXTI12_IRQHandler</a><BR>
 <LI><a href="#[59]">EXTI13_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[59]">EXTI13_IRQHandler</a><BR>
 <LI><a href="#[5a]">DCMI_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5a]">DCMI_IRQHandler</a><BR>
 <LI><a href="#[5b]">CRYP1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5b]">CRYP1_IRQHandler</a><BR>
 <LI><a href="#[5c]">HASH1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5c]">HASH1_IRQHandler</a><BR>
 <LI><a href="#[5d]">FPU_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5d]">FPU_IRQHandler</a><BR>
 <LI><a href="#[5e]">UART7_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5e]">UART7_IRQHandler</a><BR>
 <LI><a href="#[5f]">UART8_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5f]">UART8_IRQHandler</a><BR>
 <LI><a href="#[60]">SPI4_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[60]">SPI4_IRQHandler</a><BR>
 <LI><a href="#[61]">SPI5_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[61]">SPI5_IRQHandler</a><BR>
 <LI><a href="#[62]">SPI6_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[62]">SPI6_IRQHandler</a><BR>
 <LI><a href="#[63]">SAI1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[63]">SAI1_IRQHandler</a><BR>
 <LI><a href="#[64]">LTDC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[64]">LTDC_IRQHandler</a><BR>
 <LI><a href="#[65]">LTDC_ER_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[65]">LTDC_ER_IRQHandler</a><BR>
 <LI><a href="#[66]">ADC2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[66]">ADC2_IRQHandler</a><BR>
 <LI><a href="#[67]">SAI2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[67]">SAI2_IRQHandler</a><BR>
 <LI><a href="#[68]">QUADSPI_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[68]">QUADSPI_IRQHandler</a><BR>
 <LI><a href="#[69]">LPTIM1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[69]">LPTIM1_IRQHandler</a><BR>
 <LI><a href="#[6a]">CEC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6a]">CEC_IRQHandler</a><BR>
 <LI><a href="#[6b]">I2C4_EV_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6b]">I2C4_EV_IRQHandler</a><BR>
 <LI><a href="#[6c]">I2C4_ER_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6c]">I2C4_ER_IRQHandler</a><BR>
 <LI><a href="#[6d]">SPDIF_RX_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6d]">SPDIF_RX_IRQHandler</a><BR>
 <LI><a href="#[6e]">OTG_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6e]">OTG_IRQHandler</a><BR>
 <LI><a href="#[6f]">RESERVED99_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6f]">RESERVED99_IRQHandler</a><BR>
 <LI><a href="#[70]">IPCC_RX0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[70]">IPCC_RX0_IRQHandler</a><BR>
 <LI><a href="#[71]">IPCC_TX0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[71]">IPCC_TX0_IRQHandler</a><BR>
 <LI><a href="#[72]">DMAMUX1_OVR_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[72]">DMAMUX1_OVR_IRQHandler</a><BR>
 <LI><a href="#[73]">IPCC_RX1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[73]">IPCC_RX1_IRQHandler</a><BR>
 <LI><a href="#[74]">IPCC_TX1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[74]">IPCC_TX1_IRQHandler</a><BR>
 <LI><a href="#[75]">CRYP2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[75]">CRYP2_IRQHandler</a><BR>
 <LI><a href="#[76]">HASH2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[76]">HASH2_IRQHandler</a><BR>
 <LI><a href="#[77]">I2C5_EV_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[77]">I2C5_EV_IRQHandler</a><BR>
 <LI><a href="#[78]">I2C5_ER_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[78]">I2C5_ER_IRQHandler</a><BR>
 <LI><a href="#[79]">GPU_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[79]">GPU_IRQHandler</a><BR>
 <LI><a href="#[7a]">DFSDM1_FLT0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7a]">DFSDM1_FLT0_IRQHandler</a><BR>
 <LI><a href="#[7b]">DFSDM1_FLT1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7b]">DFSDM1_FLT1_IRQHandler</a><BR>
 <LI><a href="#[7c]">DFSDM1_FLT2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7c]">DFSDM1_FLT2_IRQHandler</a><BR>
 <LI><a href="#[7d]">DFSDM1_FLT3_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7d]">DFSDM1_FLT3_IRQHandler</a><BR>
 <LI><a href="#[7e]">SAI3_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7e]">SAI3_IRQHandler</a><BR>
 <LI><a href="#[7f]">DFSDM1_FLT4_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7f]">DFSDM1_FLT4_IRQHandler</a><BR>
 <LI><a href="#[80]">TIM15_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[80]">TIM15_IRQHandler</a><BR>
 <LI><a href="#[81]">TIM16_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[81]">TIM16_IRQHandler</a><BR>
 <LI><a href="#[82]">TIM17_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[82]">TIM17_IRQHandler</a><BR>
 <LI><a href="#[83]">TIM12_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[83]">TIM12_IRQHandler</a><BR>
 <LI><a href="#[84]">MDIOS_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[84]">MDIOS_IRQHandler</a><BR>
 <LI><a href="#[85]">EXTI14_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[85]">EXTI14_IRQHandler</a><BR>
 <LI><a href="#[86]">MDMA_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[86]">MDMA_IRQHandler</a><BR>
 <LI><a href="#[87]">DSI_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[87]">DSI_IRQHandler</a><BR>
 <LI><a href="#[88]">SDMMC2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[88]">SDMMC2_IRQHandler</a><BR>
 <LI><a href="#[89]">HSEM_IT2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[89]">HSEM_IT2_IRQHandler</a><BR>
 <LI><a href="#[8a]">DFSDM1_FLT5_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8a]">DFSDM1_FLT5_IRQHandler</a><BR>
 <LI><a href="#[8b]">EXTI15_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8b]">EXTI15_IRQHandler</a><BR>
 <LI><a href="#[8c]">nCTIIRQ1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8c]">nCTIIRQ1_IRQHandler</a><BR>
 <LI><a href="#[8d]">nCTIIRQ2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8d]">nCTIIRQ2_IRQHandler</a><BR>
 <LI><a href="#[8e]">TIM13_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8e]">TIM13_IRQHandler</a><BR>
 <LI><a href="#[8f]">TIM14_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8f]">TIM14_IRQHandler</a><BR>
 <LI><a href="#[90]">DAC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[90]">DAC_IRQHandler</a><BR>
 <LI><a href="#[91]">RNG1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[91]">RNG1_IRQHandler</a><BR>
 <LI><a href="#[92]">RNG2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[92]">RNG2_IRQHandler</a><BR>
 <LI><a href="#[93]">I2C6_EV_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[93]">I2C6_EV_IRQHandler</a><BR>
 <LI><a href="#[94]">I2C6_ER_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[94]">I2C6_ER_IRQHandler</a><BR>
 <LI><a href="#[95]">SDMMC3_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[95]">SDMMC3_IRQHandler</a><BR>
 <LI><a href="#[96]">LPTIM2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[96]">LPTIM2_IRQHandler</a><BR>
 <LI><a href="#[97]">LPTIM3_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[97]">LPTIM3_IRQHandler</a><BR>
 <LI><a href="#[98]">LPTIM4_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[98]">LPTIM4_IRQHandler</a><BR>
 <LI><a href="#[99]">LPTIM5_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[99]">LPTIM5_IRQHandler</a><BR>
 <LI><a href="#[9a]">ETH1_LPI_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9a]">ETH1_LPI_IRQHandler</a><BR>
 <LI><a href="#[9b]">RESERVED143_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9b]">RESERVED143_IRQHandler</a><BR>
 <LI><a href="#[9c]">MPU_SEV_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9c]">MPU_SEV_IRQHandler</a><BR>
 <LI><a href="#[9d]">RCC_WAKEUP_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9d]">RCC_WAKEUP_IRQHandler</a><BR>
 <LI><a href="#[9e]">SAI4_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9e]">SAI4_IRQHandler</a><BR>
 <LI><a href="#[9f]">DTS_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9f]">DTS_IRQHandler</a><BR>
 <LI><a href="#[a0]">RESERVED148_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a0]">RESERVED148_IRQHandler</a><BR>
 <LI><a href="#[a1]">WAKEUP_PIN_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a1]">WAKEUP_PIN_IRQHandler</a><BR>
 <LI><a href="#[6]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">BusFault_Handler</a><BR>
 <LI><a href="#[4]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">HardFault_Handler</a><BR>
 <LI><a href="#[5]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">MemManage_Handler</a><BR>
 <LI><a href="#[7]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">UsageFault_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1e]">ADC1_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[66]">ADC2_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[6]">BusFault_Handler</a> from stm32mp1xx_it.o(i.BusFault_Handler) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[6a]">CEC_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[5b]">CRYP1_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[75]">CRYP2_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[90]">DAC_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[5a]">DCMI_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[7a]">DFSDM1_FLT0_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[7b]">DFSDM1_FLT1_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[7c]">DFSDM1_FLT2_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[7d]">DFSDM1_FLT3_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[7f]">DFSDM1_FLT4_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[8a]">DFSDM1_FLT5_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[17]">DMA1_Stream0_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[18]">DMA1_Stream1_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[19]">DMA1_Stream2_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[1a]">DMA1_Stream3_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[1b]">DMA1_Stream4_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[1c]">DMA1_Stream5_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[1d]">DMA1_Stream6_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[3b]">DMA1_Stream7_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[44]">DMA2_Stream0_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[45]">DMA2_Stream1_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[46]">DMA2_Stream2_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[47]">DMA2_Stream3_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[48]">DMA2_Stream4_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[50]">DMA2_Stream5_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[51]">DMA2_Stream6_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[52]">DMA2_Stream7_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[72]">DMAMUX1_OVR_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[87]">DSI_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[9f]">DTS_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[9]">DebugMon_Handler</a> from stm32mp1xx_it.o(i.DebugMon_Handler) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[49]">ETH1_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[9a]">ETH1_LPI_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[4a]">ETH1_WKUP_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[12]">EXTI0_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[34]">EXTI10_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[36]">EXTI11_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[58]">EXTI12_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[59]">EXTI13_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[85]">EXTI14_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[8b]">EXTI15_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[13]">EXTI1_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[14]">EXTI2_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[15]">EXTI3_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[16]">EXTI4_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[23]">EXTI5_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[4c]">EXTI6_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[4d]">EXTI7_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[4e]">EXTI8_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[4f]">EXTI9_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[1f]">FDCAN1_IT0_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[21]">FDCAN1_IT1_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[20]">FDCAN2_IT0_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[22]">FDCAN2_IT1_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[4b]">FDCAN_CAL_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[3c]">FMC_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[5d]">FPU_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[79]">GPU_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[5c]">HASH1_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[76]">HASH2_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[89]">HSEM_IT2_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[4]">HardFault_Handler</a> from stm32mp1xx_it.o(i.HardFault_Handler) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[2c]">I2C1_ER_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[2b]">I2C1_EV_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[2e]">I2C2_ER_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[2d]">I2C2_EV_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[55]">I2C3_ER_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[54]">I2C3_EV_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[6c]">I2C4_ER_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[6b]">I2C4_EV_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[78]">I2C5_ER_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[77]">I2C5_EV_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[94]">I2C6_ER_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[93]">I2C6_EV_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[70]">IPCC_RX0_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[73]">IPCC_RX1_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[71]">IPCC_TX0_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[74]">IPCC_TX1_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[69]">LPTIM1_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[96]">LPTIM2_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[97]">LPTIM3_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[98]">LPTIM4_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[99]">LPTIM5_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[65]">LTDC_ER_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[64]">LTDC_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[84]">MDIOS_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[86]">MDMA_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[9c]">MPU_SEV_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[5]">MemManage_Handler</a> from stm32mp1xx_it.o(i.MemManage_Handler) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[3]">NMI_Handler</a> from stm32mp1xx_it.o(i.NMI_Handler) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[6e]">OTG_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[d]">PVD_AVD_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[a]">PendSV_Handler</a> from stm32mp1xx_it.o(i.PendSV_Handler) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[68]">QUADSPI_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[11]">RCC_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[9d]">RCC_WAKEUP_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[9b]">RESERVED143_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[a0]">RESERVED148_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[10]">RESERVED4_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[6f]">RESERVED99_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[91]">RNG1_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[92]">RNG2_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[35]">RTC_TIMESTAMP_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[f]">RTC_WKUP_ALARM_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[2]">Reset_Handler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[63]">SAI1_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[67]">SAI2_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[7e]">SAI3_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[9e]">SAI4_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[3d]">SDMMC1_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[88]">SDMMC2_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[95]">SDMMC3_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[6d]">SPDIF_RX_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[2f]">SPI1_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[30]">SPI2_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[3f]">SPI3_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[60]">SPI4_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[61]">SPI5_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[62]">SPI6_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[8]">SVC_Handler</a> from stm32mp1xx_it.o(i.SVC_Handler) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[b]">SysTick_Handler</a> from stm32mp1xx_it.o(i.SysTick_Handler) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[a2]">SystemInit</a> from system_stm32mp1xx.o(i.SystemInit) referenced from startup_stm32mp15xx.o(.text)
 <LI><a href="#[e]">TAMP_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[83]">TIM12_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[8e]">TIM13_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[8f]">TIM14_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[80]">TIM15_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[81]">TIM16_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[82]">TIM17_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[24]">TIM1_BRK_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[27]">TIM1_CC_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[26]">TIM1_TRG_COM_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[25]">TIM1_UP_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[28]">TIM2_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[29]">TIM3_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[2a]">TIM4_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[3e]">TIM5_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[42]">TIM6_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[43]">TIM7_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[37]">TIM8_BRK_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[3a]">TIM8_CC_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[39]">TIM8_TRG_COM_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[38]">TIM8_UP_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[40]">UART4_IRQHandler</a> from usart.o(i.UART4_IRQHandler) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[41]">UART5_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[5e]">UART7_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[5f]">UART8_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[a4]">UART_DMAAbortOnError</a> from stm32mp1xx_hal_uart.o(i.UART_DMAAbortOnError) referenced from stm32mp1xx_hal_uart.o(i.HAL_UART_IRQHandler)
 <LI><a href="#[a5]">UART_MDMAAbortOnError</a> from stm32mp1xx_hal_uart.o(i.UART_MDMAAbortOnError) referenced from stm32mp1xx_hal_uart.o(i.HAL_UART_IRQHandler)
 <LI><a href="#[a9]">UART_RxISR_16BIT</a> from stm32mp1xx_hal_uart.o(i.UART_RxISR_16BIT) referenced from stm32mp1xx_hal_uart.o(i.HAL_UART_Receive_IT)
 <LI><a href="#[a9]">UART_RxISR_16BIT</a> from stm32mp1xx_hal_uart.o(i.UART_RxISR_16BIT) referenced from stm32mp1xx_hal_uart.o(i.UART_RxISR_16BIT_FIFOEN)
 <LI><a href="#[a7]">UART_RxISR_16BIT_FIFOEN</a> from stm32mp1xx_hal_uart.o(i.UART_RxISR_16BIT_FIFOEN) referenced from stm32mp1xx_hal_uart.o(i.HAL_UART_Receive_IT)
 <LI><a href="#[a8]">UART_RxISR_8BIT</a> from stm32mp1xx_hal_uart.o(i.UART_RxISR_8BIT) referenced from stm32mp1xx_hal_uart.o(i.HAL_UART_Receive_IT)
 <LI><a href="#[a8]">UART_RxISR_8BIT</a> from stm32mp1xx_hal_uart.o(i.UART_RxISR_8BIT) referenced from stm32mp1xx_hal_uart.o(i.UART_RxISR_8BIT_FIFOEN)
 <LI><a href="#[a6]">UART_RxISR_8BIT_FIFOEN</a> from stm32mp1xx_hal_uart.o(i.UART_RxISR_8BIT_FIFOEN) referenced from stm32mp1xx_hal_uart.o(i.HAL_UART_Receive_IT)
 <LI><a href="#[31]">USART1_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[32]">USART2_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[33]">USART3_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[53]">USART6_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[57]">USBH_EHCI_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[56]">USBH_OHCI_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[7]">UsageFault_Handler</a> from stm32mp1xx_it.o(i.UsageFault_Handler) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[a1]">WAKEUP_PIN_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[c]">WWDG1_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[aa]">__main</a> from __main.o(!!!main) referenced from startup_stm32mp15xx.o(.text)
 <LI><a href="#[8c]">nCTIIRQ1_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
 <LI><a href="#[8d]">nCTIIRQ2_IRQHandler</a> from startup_stm32mp15xx.o(.text) referenced from startup_stm32mp15xx.o(RESET)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[aa]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[ab]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[ad]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[ef]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[f0]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[f1]"></a>__decompress</STRONG> (Thumb, 90 bytes, Stack size unknown bytes, __dczerorl2.o(!!dczerorl2), UNUSED)

<P><STRONG><a name="[f2]"></a>__decompress1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(!!dczerorl2), UNUSED)

<P><STRONG><a name="[f3]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[b1]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[ae]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000001))
<BR><BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_init
</UL>

<P><STRONG><a name="[f4]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[f5]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[f6]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[f7]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[f8]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[f9]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[fa]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[fb]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[fc]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[fd]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[fe]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[ff]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[100]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[101]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[102]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[103]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[104]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[105]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[106]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[107]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[b6]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[108]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[109]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000007))

<P><STRONG><a name="[10a]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[10b]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000010))

<P><STRONG><a name="[10c]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A))

<P><STRONG><a name="[10d]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[10e]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[ac]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[10f]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[110]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry5.o(.ARM.Collect$$rtentry$$00000005))

<P><STRONG><a name="[b0]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[111]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[b2]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 460 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; sys_stm32_clock_init &rArr; HAL_RCC_ClockConfig &rArr; RCC_MCUConfig &rArr; HAL_RCC_GetMCUFreq &rArr; HAL_RCC_GetMCUSSFreq &rArr; HAL_RCC_GetPLL3ClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[112]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[b9]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[b5]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[113]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[b7]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[2]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>WWDG1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WWDG1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WWDG1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>PVD_AVD_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PVD_AVD_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PVD_AVD_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>TAMP_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TAMP_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TAMP_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>RTC_WKUP_ALARM_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WKUP_ALARM_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WKUP_ALARM_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>RESERVED4_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RESERVED4_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RESERVED4_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>RCC_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI3_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI3_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DMA1_Stream0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA1_Stream1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA1_Stream2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA1_Stream3_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream3_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream3_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA1_Stream4_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream4_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream4_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>DMA1_Stream5_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream5_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream5_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>DMA1_Stream6_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream6_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream6_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>ADC1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>FDCAN1_IT0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FDCAN1_IT0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FDCAN1_IT0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>FDCAN2_IT0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FDCAN2_IT0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FDCAN2_IT0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>FDCAN1_IT1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FDCAN1_IT1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FDCAN1_IT1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>FDCAN2_IT1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FDCAN2_IT1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FDCAN2_IT1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>EXTI5_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI5_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI5_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>TIM1_BRK_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_BRK_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_BRK_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>TIM1_UP_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_UP_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_UP_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>TIM1_TRG_COM_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_TRG_COM_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_TRG_COM_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_CC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_CC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>TIM2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>TIM3_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>TIM4_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C1_EV_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C1_EV_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C1_ER_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C1_ER_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C2_EV_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C2_EV_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C2_ER_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C2_ER_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>SPI1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>SPI2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>USART1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>USART2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>USART3_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>EXTI10_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI10_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI10_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>RTC_TIMESTAMP_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_TIMESTAMP_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_TIMESTAMP_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>EXTI11_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI11_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI11_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>TIM8_BRK_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM8_BRK_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM8_BRK_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>TIM8_UP_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM8_UP_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM8_UP_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>TIM8_TRG_COM_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM8_TRG_COM_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM8_TRG_COM_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM8_CC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM8_CC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>DMA1_Stream7_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream7_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream7_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>FMC_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>SDMMC1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>TIM5_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM5_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM5_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>SPI3_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI3_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI3_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>UART5_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART5_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART5_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>TIM6_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>TIM7_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM7_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM7_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>DMA2_Stream0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Stream0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Stream0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>DMA2_Stream1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Stream1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Stream1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>DMA2_Stream2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Stream2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Stream2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>DMA2_Stream3_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Stream3_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Stream3_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>DMA2_Stream4_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Stream4_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Stream4_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>ETH1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>ETH1_WKUP_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH1_WKUP_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH1_WKUP_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>FDCAN_CAL_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FDCAN_CAL_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FDCAN_CAL_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>EXTI6_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI6_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI6_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>EXTI7_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI7_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI7_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>EXTI8_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI8_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI8_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>EXTI9_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI9_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI9_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>DMA2_Stream5_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Stream5_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Stream5_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>DMA2_Stream6_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Stream6_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Stream6_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>DMA2_Stream7_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Stream7_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Stream7_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>USART6_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART6_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART6_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>I2C3_EV_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C3_EV_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C3_EV_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>I2C3_ER_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C3_ER_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C3_ER_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>USBH_OHCI_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OHCI_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>USBH_EHCI_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_EHCI_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_EHCI_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>EXTI12_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI12_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI12_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>EXTI13_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI13_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI13_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>DCMI_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCMI_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCMI_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>CRYP1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRYP1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRYP1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>HASH1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HASH1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HASH1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>FPU_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FPU_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FPU_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>UART7_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART7_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART7_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[5f]"></a>UART8_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART8_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART8_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>SPI4_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI4_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI4_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[61]"></a>SPI5_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI5_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI5_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[62]"></a>SPI6_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI6_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI6_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[63]"></a>SAI1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[64]"></a>LTDC_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[65]"></a>LTDC_ER_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_ER_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_ER_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[66]"></a>ADC2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[67]"></a>SAI2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[68]"></a>QUADSPI_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUADSPI_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUADSPI_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[69]"></a>LPTIM1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPTIM1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPTIM1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[6a]"></a>CEC_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CEC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CEC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[6b]"></a>I2C4_EV_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C4_EV_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C4_EV_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[6c]"></a>I2C4_ER_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C4_ER_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C4_ER_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[6d]"></a>SPDIF_RX_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPDIF_RX_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPDIF_RX_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[6e]"></a>OTG_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OTG_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OTG_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[6f]"></a>RESERVED99_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RESERVED99_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RESERVED99_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[70]"></a>IPCC_RX0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPCC_RX0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPCC_RX0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[71]"></a>IPCC_TX0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPCC_TX0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPCC_TX0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[72]"></a>DMAMUX1_OVR_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMAMUX1_OVR_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMAMUX1_OVR_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[73]"></a>IPCC_RX1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPCC_RX1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPCC_RX1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[74]"></a>IPCC_TX1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPCC_TX1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPCC_TX1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[75]"></a>CRYP2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRYP2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRYP2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[76]"></a>HASH2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HASH2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HASH2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[77]"></a>I2C5_EV_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C5_EV_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C5_EV_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[78]"></a>I2C5_ER_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C5_ER_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C5_ER_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[79]"></a>GPU_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPU_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPU_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[7a]"></a>DFSDM1_FLT0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DFSDM1_FLT0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DFSDM1_FLT0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[7b]"></a>DFSDM1_FLT1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DFSDM1_FLT1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DFSDM1_FLT1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[7c]"></a>DFSDM1_FLT2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DFSDM1_FLT2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DFSDM1_FLT2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[7d]"></a>DFSDM1_FLT3_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DFSDM1_FLT3_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DFSDM1_FLT3_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[7e]"></a>SAI3_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI3_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI3_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[7f]"></a>DFSDM1_FLT4_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DFSDM1_FLT4_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DFSDM1_FLT4_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[80]"></a>TIM15_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM15_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM15_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[81]"></a>TIM16_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM16_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM16_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[82]"></a>TIM17_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM17_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM17_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[83]"></a>TIM12_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM12_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM12_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[84]"></a>MDIOS_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDIOS_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDIOS_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[85]"></a>EXTI14_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI14_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI14_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[86]"></a>MDMA_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDMA_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDMA_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[87]"></a>DSI_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSI_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSI_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[88]"></a>SDMMC2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[89]"></a>HSEM_IT2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HSEM_IT2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HSEM_IT2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[8a]"></a>DFSDM1_FLT5_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DFSDM1_FLT5_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DFSDM1_FLT5_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[8b]"></a>EXTI15_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI15_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI15_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[8c]"></a>nCTIIRQ1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nCTIIRQ1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nCTIIRQ1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[8d]"></a>nCTIIRQ2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nCTIIRQ2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nCTIIRQ2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[8e]"></a>TIM13_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM13_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM13_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[8f]"></a>TIM14_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM14_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM14_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[90]"></a>DAC_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[91]"></a>RNG1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RNG1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RNG1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[92]"></a>RNG2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RNG2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RNG2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[93]"></a>I2C6_EV_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C6_EV_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C6_EV_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[94]"></a>I2C6_ER_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C6_ER_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C6_ER_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[95]"></a>SDMMC3_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC3_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC3_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[96]"></a>LPTIM2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPTIM2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPTIM2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[97]"></a>LPTIM3_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPTIM3_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPTIM3_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[98]"></a>LPTIM4_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPTIM4_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPTIM4_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[99]"></a>LPTIM5_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPTIM5_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPTIM5_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[9a]"></a>ETH1_LPI_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH1_LPI_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH1_LPI_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[9b]"></a>RESERVED143_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RESERVED143_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RESERVED143_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[9c]"></a>MPU_SEV_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_SEV_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_SEV_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[9d]"></a>RCC_WAKEUP_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_WAKEUP_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_WAKEUP_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[9e]"></a>SAI4_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI4_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI4_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[9f]"></a>DTS_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DTS_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DTS_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[a0]"></a>RESERVED148_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RESERVED148_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RESERVED148_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[a1]"></a>WAKEUP_PIN_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32mp15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WAKEUP_PIN_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WAKEUP_PIN_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[114]"></a>__use_no_semihosting</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi_2.o(.text), UNUSED)

<P><STRONG><a name="[115]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[116]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[b4]"></a>exit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[6]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32mp1xx_it.o(i.BusFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32mp1xx_it.o(i.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[d4]"></a>HAL_DMA_Abort_IT</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, stm32mp1xx_hal_dma.o(i.HAL_DMA_Abort_IT))
<BR><BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[ba]"></a>HAL_Delay</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, stm32mp1xx_hal.o(i.HAL_Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e4]"></a>HAL_GPIO_Init</STRONG> (Thumb, 444 bytes, Stack size 36 bytes, stm32mp1xx_hal_gpio.o(i.HAL_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_init
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_init
</UL>

<P><STRONG><a name="[ea]"></a>HAL_GPIO_TogglePin</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32mp1xx_hal_gpio.o(i.HAL_GPIO_TogglePin))
<BR><BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e5]"></a>HAL_GPIO_WritePin</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32mp1xx_hal_gpio.o(i.HAL_GPIO_WritePin))
<BR><BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_init
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_init
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_wr_byte
</UL>

<P><STRONG><a name="[bb]"></a>HAL_GetTick</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32mp1xx_hal.o(i.HAL_GetTick))
<BR><BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCCEx_PLL4_Config
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCCEx_PLL3_Config
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCCEx_PLL2_Config
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PLL1_Config
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_MPUConfig
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_MCUConfig
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AXISSConfig
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_LSEConfig
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_HSEConfig
</UL>

<P><STRONG><a name="[dd]"></a>HAL_IncTick</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32mp1xx_hal.o(i.HAL_IncTick))
<BR><BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[bc]"></a>HAL_Init</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, stm32mp1xx_hal.o(i.HAL_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = HAL_Init &rArr; HAL_RCC_GetSystemCoreClockFreq &rArr; HAL_RCC_GetMCUFreq &rArr; HAL_RCC_GetMCUSSFreq &rArr; HAL_RCC_GetPLL3ClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSystemCoreClockFreq
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriorityGrouping
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[bf]"></a>HAL_InitTick</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, stm32mp1xx_hal.o(i.HAL_InitTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_MCUConfig
</UL>

<P><STRONG><a name="[d5]"></a>HAL_MDMA_Abort_IT</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, stm32mp1xx_hal_mdma.o(i.HAL_MDMA_Abort_IT))
<BR><BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[c0]"></a>HAL_MspInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32mp1xx_hal.o(i.HAL_MspInit))
<BR><BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[c2]"></a>HAL_NVIC_SetPriority</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, stm32mp1xx_hal_cortex.o(i.HAL_NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[bd]"></a>HAL_NVIC_SetPriorityGrouping</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32mp1xx_hal_cortex.o(i.HAL_NVIC_SetPriorityGrouping))
<BR><BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[ee]"></a>HAL_PWR_EnableBkUpAccess</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32mp1xx_hal_pwr.o(i.HAL_PWR_EnableBkUpAccess))
<BR><BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_stm32_clock_init
</UL>

<P><STRONG><a name="[c4]"></a>HAL_RCC_ClockConfig</STRONG> (Thumb, 302 bytes, Stack size 24 bytes, stm32mp1xx_hal_rcc.o(i.HAL_RCC_ClockConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = HAL_RCC_ClockConfig &rArr; RCC_MCUConfig &rArr; HAL_RCC_GetMCUFreq &rArr; HAL_RCC_GetMCUSSFreq &rArr; HAL_RCC_GetPLL3ClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_MPUConfig
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_MCUConfig
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AXISSConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_stm32_clock_init
</UL>

<P><STRONG><a name="[c8]"></a>HAL_RCC_GetMCUFreq</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, stm32mp1xx_hal_rcc.o(i.HAL_RCC_GetMCUFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = HAL_RCC_GetMCUFreq &rArr; HAL_RCC_GetMCUSSFreq &rArr; HAL_RCC_GetPLL3ClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetMCUSSFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSystemCoreClockFreq
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_MCUConfig
</UL>

<P><STRONG><a name="[c9]"></a>HAL_RCC_GetMCUSSFreq</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, stm32mp1xx_hal_rcc.o(i.HAL_RCC_GetMCUSSFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = HAL_RCC_GetMCUSSFreq &rArr; HAL_RCC_GetPLL3ClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPLL3ClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetMCUFreq
</UL>

<P><STRONG><a name="[ca]"></a>HAL_RCC_GetPLL3ClockFreq</STRONG> (Thumb, 244 bytes, Stack size 12 bytes, stm32mp1xx_hal_rcc.o(i.HAL_RCC_GetPLL3ClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = HAL_RCC_GetPLL3ClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetMCUSSFreq
</UL>

<P><STRONG><a name="[be]"></a>HAL_RCC_GetSystemCoreClockFreq</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32mp1xx_hal_rcc.o(i.HAL_RCC_GetSystemCoreClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = HAL_RCC_GetSystemCoreClockFreq &rArr; HAL_RCC_GetMCUFreq &rArr; HAL_RCC_GetMCUSSFreq &rArr; HAL_RCC_GetPLL3ClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetMCUFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[cb]"></a>HAL_RCC_HSEConfig</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, stm32mp1xx_hal_rcc.o(i.HAL_RCC_HSEConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_RCC_HSEConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
</UL>

<P><STRONG><a name="[cc]"></a>HAL_RCC_LSEConfig</STRONG> (Thumb, 154 bytes, Stack size 24 bytes, stm32mp1xx_hal_rcc.o(i.HAL_RCC_LSEConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_RCC_LSEConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
</UL>

<P><STRONG><a name="[cd]"></a>HAL_RCC_OscConfig</STRONG> (Thumb, 938 bytes, Stack size 40 bytes, stm32mp1xx_hal_rcc.o(i.HAL_RCC_OscConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = HAL_RCC_OscConfig &rArr; HAL_RCC_GetMCUFreq &rArr; HAL_RCC_GetMCUSSFreq &rArr; HAL_RCC_GetPLL3ClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCCEx_PLL4_Config
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCCEx_PLL3_Config
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCCEx_PLL2_Config
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PLL1_Config
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_LSEConfig
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_HSEConfig
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetMCUFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_stm32_clock_init
</UL>

<P><STRONG><a name="[c1]"></a>HAL_SYSTICK_Config</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, stm32mp1xx_hal_cortex.o(i.HAL_SYSTICK_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_SYSTICK_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[da]"></a>HAL_UARTEx_RxFifoFullCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32mp1xx_hal_uart_ex.o(i.HAL_UARTEx_RxFifoFullCallback))
<BR><BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[d9]"></a>HAL_UARTEx_TxFifoEmptyCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32mp1xx_hal_uart_ex.o(i.HAL_UARTEx_TxFifoEmptyCallback))
<BR><BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[d7]"></a>HAL_UARTEx_WakeupCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32mp1xx_hal_uart_ex.o(i.HAL_UARTEx_WakeupCallback))
<BR><BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[d6]"></a>HAL_UART_ErrorCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32mp1xx_hal_uart.o(i.HAL_UART_ErrorCallback))
<BR><BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_MDMAAbortOnError
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DMAAbortOnError
</UL>

<P><STRONG><a name="[de]"></a>HAL_UART_GetState</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32mp1xx_hal_uart.o(i.HAL_UART_GetState))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_IRQHandler
</UL>

<P><STRONG><a name="[d2]"></a>HAL_UART_IRQHandler</STRONG> (Thumb, 468 bytes, Stack size 24 bytes, stm32mp1xx_hal_uart.o(i.HAL_UART_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_UART_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MDMA_Abort_IT
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Abort_IT
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_EndRxTransfer
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_TxCpltCallback
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_ErrorCallback
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UARTEx_WakeupCallback
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UARTEx_TxFifoEmptyCallback
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UARTEx_RxFifoFullCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_IRQHandler
</UL>

<P><STRONG><a name="[df]"></a>HAL_UART_Receive_IT</STRONG> (Thumb, 234 bytes, Stack size 16 bytes, stm32mp1xx_hal_uart.o(i.HAL_UART_Receive_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_UART_Receive_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_IRQHandler
</UL>

<P><STRONG><a name="[e0]"></a>HAL_UART_RxCpltCallback</STRONG> (Thumb, 76 bytes, Stack size 12 bytes, usart.o(i.HAL_UART_RxCpltCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = HAL_UART_RxCpltCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RxISR_8BIT_FIFOEN
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RxISR_8BIT
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RxISR_16BIT_FIFOEN
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RxISR_16BIT
</UL>

<P><STRONG><a name="[d8]"></a>HAL_UART_TxCpltCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32mp1xx_hal_uart.o(i.HAL_UART_TxCpltCallback))
<BR><BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[4]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32mp1xx_it.o(i.HardFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32mp1xx_it.o(i.MemManage_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32mp1xx_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[db]"></a>OLED_ShowBMP</STRONG> (Thumb, 110 bytes, Stack size 52 bytes, oled.o(i.OLED_ShowBMP))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = OLED_ShowBMP &rArr; oled_draw_point
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_draw_point
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32mp1xx_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[cf]"></a>RCCEx_PLL2_Config</STRONG> (Thumb, 468 bytes, Stack size 16 bytes, stm32mp1xx_hal_rcc_ex.o(i.RCCEx_PLL2_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RCCEx_PLL2_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
</UL>

<P><STRONG><a name="[d0]"></a>RCCEx_PLL3_Config</STRONG> (Thumb, 384 bytes, Stack size 24 bytes, stm32mp1xx_hal_rcc_ex.o(i.RCCEx_PLL3_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
</UL>

<P><STRONG><a name="[d1]"></a>RCCEx_PLL4_Config</STRONG> (Thumb, 358 bytes, Stack size 24 bytes, stm32mp1xx_hal_rcc_ex.o(i.RCCEx_PLL4_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RCCEx_PLL4_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
</UL>

<P><STRONG><a name="[c6]"></a>RCC_AXISSConfig</STRONG> (Thumb, 176 bytes, Stack size 24 bytes, stm32mp1xx_hal_rcc.o(i.RCC_AXISSConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RCC_AXISSConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
</UL>

<P><STRONG><a name="[c7]"></a>RCC_MCUConfig</STRONG> (Thumb, 196 bytes, Stack size 24 bytes, stm32mp1xx_hal_rcc.o(i.RCC_MCUConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = RCC_MCUConfig &rArr; HAL_RCC_GetMCUFreq &rArr; HAL_RCC_GetMCUSSFreq &rArr; HAL_RCC_GetPLL3ClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetMCUFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
</UL>

<P><STRONG><a name="[c5]"></a>RCC_MPUConfig</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, stm32mp1xx_hal_rcc.o(i.RCC_MPUConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RCC_MPUConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
</UL>

<P><STRONG><a name="[ce]"></a>RCC_PLL1_Config</STRONG> (Thumb, 446 bytes, Stack size 16 bytes, stm32mp1xx_hal_rcc.o(i.RCC_PLL1_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RCC_PLL1_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
</UL>

<P><STRONG><a name="[8]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32mp1xx_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>SysTick_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32mp1xx_it.o(i.SysTick_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_IncTick
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[a2]"></a>SystemInit</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, system_stm32mp1xx.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(.text)
</UL>
<P><STRONG><a name="[40]"></a>UART4_IRQHandler</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, usart.o(i.UART4_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = UART4_IRQHandler &rArr; HAL_UART_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Receive_IT
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_GetState
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32mp1xx_it.o(i.UsageFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32mp15xx.o(RESET)
</UL>
<P><STRONG><a name="[b8]"></a>_sys_exit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usart.o(i._sys_exit))
<BR><BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[e7]"></a>delay_init</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, delay.o(i.delay_init))
<BR><BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e1]"></a>delay_ms</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, delay.o(i.delay_ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = delay_ms &rArr; delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_init
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e2]"></a>delay_us</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, delay.o(i.delay_us))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>

<P><STRONG><a name="[e3]"></a>led_init</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, led.o(i.led_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = led_init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b3]"></a>main</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 460<LI>Call Chain = main &rArr; sys_stm32_clock_init &rArr; HAL_RCC_ClockConfig &rArr; RCC_MCUConfig &rArr; HAL_RCC_GetMCUFreq &rArr; HAL_RCC_GetMCUSSFreq &rArr; HAL_RCC_GetPLL3ClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_stm32_clock_init
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_refresh_gram
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_init
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_init
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_init
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowBMP
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_TogglePin
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[eb]"></a>oled_clear</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, oled.o(i.oled_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = oled_clear &rArr; oled_refresh_gram &rArr; oled_wr_byte
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_refresh_gram
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_init
</UL>

<P><STRONG><a name="[dc]"></a>oled_draw_point</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, oled.o(i.oled_draw_point))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = oled_draw_point
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowBMP
</UL>

<P><STRONG><a name="[e8]"></a>oled_init</STRONG> (Thumb, 396 bytes, Stack size 48 bytes, oled.o(i.oled_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = oled_init &rArr; oled_clear &rArr; oled_refresh_gram &rArr; oled_wr_byte
</UL>
<BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_clear
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_wr_byte
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e9]"></a>oled_refresh_gram</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, oled.o(i.oled_refresh_gram))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = oled_refresh_gram &rArr; oled_wr_byte
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_wr_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_clear
</UL>

<P><STRONG><a name="[e6]"></a>sys_stm32_clock_init</STRONG> (Thumb, 240 bytes, Stack size 360 bytes, sys.o(i.sys_stm32_clock_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 444<LI>Call Chain = sys_stm32_clock_init &rArr; HAL_RCC_ClockConfig &rArr; RCC_MCUConfig &rArr; HAL_RCC_GetMCUFreq &rArr; HAL_RCC_GetMCUSSFreq &rArr; HAL_RCC_GetPLL3ClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWR_EnableBkUpAccess
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[af]"></a>_fp_init</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fpinit.o(x$fpl$fpinit))
<BR><BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_fp_1
</UL>

<P><STRONG><a name="[117]"></a>__fplib_config_fpu_vfp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)

<P><STRONG><a name="[118]"></a>__fplib_config_pureend_doubles</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[c3]"></a>__NVIC_SetPriority</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32mp1xx_hal_cortex.o(i.__NVIC_SetPriority))
<BR><BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
</UL>

<P><STRONG><a name="[a4]"></a>UART_DMAAbortOnError</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, stm32mp1xx_hal_uart.o(i.UART_DMAAbortOnError))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART_DMAAbortOnError
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_ErrorCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32mp1xx_hal_uart.o(i.HAL_UART_IRQHandler)
</UL>
<P><STRONG><a name="[d3]"></a>UART_EndRxTransfer</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32mp1xx_hal_uart.o(i.UART_EndRxTransfer))
<BR><BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[a5]"></a>UART_MDMAAbortOnError</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, stm32mp1xx_hal_uart.o(i.UART_MDMAAbortOnError))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART_MDMAAbortOnError
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_ErrorCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32mp1xx_hal_uart.o(i.HAL_UART_IRQHandler)
</UL>
<P><STRONG><a name="[a9]"></a>UART_RxISR_16BIT</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, stm32mp1xx_hal_uart.o(i.UART_RxISR_16BIT))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = UART_RxISR_16BIT &rArr; HAL_UART_RxCpltCallback
</UL>
<BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_RxCpltCallback
</UL>
<BR>[Address Reference Count : 2]<UL><LI> stm32mp1xx_hal_uart.o(i.HAL_UART_Receive_IT)
<LI> stm32mp1xx_hal_uart.o(i.UART_RxISR_16BIT_FIFOEN)
</UL>
<P><STRONG><a name="[a7]"></a>UART_RxISR_16BIT_FIFOEN</STRONG> (Thumb, 152 bytes, Stack size 16 bytes, stm32mp1xx_hal_uart.o(i.UART_RxISR_16BIT_FIFOEN))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = UART_RxISR_16BIT_FIFOEN &rArr; HAL_UART_RxCpltCallback
</UL>
<BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_RxCpltCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32mp1xx_hal_uart.o(i.HAL_UART_Receive_IT)
</UL>
<P><STRONG><a name="[a8]"></a>UART_RxISR_8BIT</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, stm32mp1xx_hal_uart.o(i.UART_RxISR_8BIT))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = UART_RxISR_8BIT &rArr; HAL_UART_RxCpltCallback
</UL>
<BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_RxCpltCallback
</UL>
<BR>[Address Reference Count : 2]<UL><LI> stm32mp1xx_hal_uart.o(i.HAL_UART_Receive_IT)
<LI> stm32mp1xx_hal_uart.o(i.UART_RxISR_8BIT_FIFOEN)
</UL>
<P><STRONG><a name="[a6]"></a>UART_RxISR_8BIT_FIFOEN</STRONG> (Thumb, 152 bytes, Stack size 16 bytes, stm32mp1xx_hal_uart.o(i.UART_RxISR_8BIT_FIFOEN))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = UART_RxISR_8BIT_FIFOEN &rArr; HAL_UART_RxCpltCallback
</UL>
<BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_RxCpltCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32mp1xx_hal_uart.o(i.HAL_UART_Receive_IT)
</UL>
<P><STRONG><a name="[ed]"></a>oled_data_out</STRONG> (Thumb, 108 bytes, Stack size 0 bytes, oled.o(i.oled_data_out))
<BR><BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_wr_byte
</UL>

<P><STRONG><a name="[ec]"></a>oled_wr_byte</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, oled.o(i.oled_wr_byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = oled_wr_byte
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_data_out
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_refresh_gram
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_init
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
